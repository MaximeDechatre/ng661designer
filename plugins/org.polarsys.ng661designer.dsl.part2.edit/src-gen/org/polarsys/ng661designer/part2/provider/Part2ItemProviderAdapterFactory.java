/**
 * Copyright (c) 2015, 2018 Airbus and the NG661designer project contributors.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * Contributors:
 *     Obeo - initial API and implementation
 */
package org.polarsys.ng661designer.part2.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.polarsys.ng661designer.part2.util.Part2AdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Part2ItemProviderAdapterFactory extends Part2AdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final String copyright = "Copyright (c) 2015, 2018 Airbus and the NG661designer project contributors.\nAll rights reserved. This program and the accompanying materials\nare made available under the terms of the Eclipse Public License v1.0\nwhich accompanies this distribution, and is available at\nhttp://www.eclipse.org/legal/epl-v10.html\nContributors:\n    Obeo - initial API and implementation";

	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Part2ItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ArcComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArcComponentItemProvider arcComponentItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ArcComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArcComponentAdapter() {
		if (arcComponentItemProvider == null) {
			arcComponentItemProvider = new ArcComponentItemProvider(this);
		}

		return arcComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ArrayDefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayDefinitionTypeItemProvider arrayDefinitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ArrayDefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayDefinitionTypeAdapter() {
		if (arrayDefinitionTypeItemProvider == null) {
			arrayDefinitionTypeItemProvider = new ArrayDefinitionTypeItemProvider(this);
		}

		return arrayDefinitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ArrayEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayEntryTypeItemProvider arrayEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ArrayEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayEntryTypeAdapter() {
		if (arrayEntryTypeItemProvider == null) {
			arrayEntryTypeItemProvider = new ArrayEntryTypeItemProvider(this);
		}

		return arrayEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ArrayEventType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayEventTypeItemProvider arrayEventTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ArrayEventType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayEventTypeAdapter() {
		if (arrayEventTypeItemProvider == null) {
			arrayEventTypeItemProvider = new ArrayEventTypeItemProvider(this);
		}

		return arrayEventTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ArrayFieldDefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayFieldDefinitionTypeItemProvider arrayFieldDefinitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ArrayFieldDefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayFieldDefinitionTypeAdapter() {
		if (arrayFieldDefinitionTypeItemProvider == null) {
			arrayFieldDefinitionTypeItemProvider = new ArrayFieldDefinitionTypeItemProvider(this);
		}

		return arrayFieldDefinitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ArrayFieldType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayFieldTypeItemProvider arrayFieldTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ArrayFieldType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayFieldTypeAdapter() {
		if (arrayFieldTypeItemProvider == null) {
			arrayFieldTypeItemProvider = new ArrayFieldTypeItemProvider(this);
		}

		return arrayFieldTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ArrayPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayPropertyTypeItemProvider arrayPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ArrayPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayPropertyTypeAdapter() {
		if (arrayPropertyTypeItemProvider == null) {
			arrayPropertyTypeItemProvider = new ArrayPropertyTypeItemProvider(this);
		}

		return arrayPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.BehaviorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BehaviorTypeItemProvider behaviorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.BehaviorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBehaviorTypeAdapter() {
		if (behaviorTypeItemProvider == null) {
			behaviorTypeItemProvider = new BehaviorTypeItemProvider(this);
		}

		return behaviorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ChildPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildPrimitiveItemProvider childPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ChildPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChildPrimitiveAdapter() {
		if (childPrimitiveItemProvider == null) {
			childPrimitiveItemProvider = new ChildPrimitiveItemProvider(this);
		}

		return childPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.CirclePrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CirclePrimitiveItemProvider circlePrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.CirclePrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCirclePrimitiveAdapter() {
		if (circlePrimitiveItemProvider == null) {
			circlePrimitiveItemProvider = new CirclePrimitiveItemProvider(this);
		}

		return circlePrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ClipPathPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClipPathPrimitiveItemProvider clipPathPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ClipPathPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClipPathPrimitiveAdapter() {
		if (clipPathPrimitiveItemProvider == null) {
			clipPathPrimitiveItemProvider = new ClipPathPrimitiveItemProvider(this);
		}

		return clipPathPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ClippingContainerPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClippingContainerPrimitiveItemProvider clippingContainerPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ClippingContainerPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClippingContainerPrimitiveAdapter() {
		if (clippingContainerPrimitiveItemProvider == null) {
			clippingContainerPrimitiveItemProvider = new ClippingContainerPrimitiveItemProvider(this);
		}

		return clippingContainerPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ClockType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClockTypeItemProvider clockTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ClockType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClockTypeAdapter() {
		if (clockTypeItemProvider == null) {
			clockTypeItemProvider = new ClockTypeItemProvider(this);
		}

		return clockTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ClosePathCommand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClosePathCommandItemProvider closePathCommandItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ClosePathCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClosePathCommandAdapter() {
		if (closePathCommandItemProvider == null) {
			closePathCommandItemProvider = new ClosePathCommandItemProvider(this);
		}

		return closePathCommandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ComponentDefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentDefinitionTypeItemProvider componentDefinitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ComponentDefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentDefinitionTypeAdapter() {
		if (componentDefinitionTypeItemProvider == null) {
			componentDefinitionTypeItemProvider = new ComponentDefinitionTypeItemProvider(this);
		}

		return componentDefinitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.CrownComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CrownComponentItemProvider crownComponentItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.CrownComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCrownComponentAdapter() {
		if (crownComponentItemProvider == null) {
			crownComponentItemProvider = new CrownComponentItemProvider(this);
		}

		return crownComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.CubicBezierCurveCommand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CubicBezierCurveCommandItemProvider cubicBezierCurveCommandItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.CubicBezierCurveCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCubicBezierCurveCommandAdapter() {
		if (cubicBezierCurveCommandItemProvider == null) {
			cubicBezierCurveCommandItemProvider = new CubicBezierCurveCommandItemProvider(this);
		}

		return cubicBezierCurveCommandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.CustomIntegerTypeElementType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomIntegerTypeElementTypeItemProvider customIntegerTypeElementTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.CustomIntegerTypeElementType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomIntegerTypeElementTypeAdapter() {
		if (customIntegerTypeElementTypeItemProvider == null) {
			customIntegerTypeElementTypeItemProvider = new CustomIntegerTypeElementTypeItemProvider(this);
		}

		return customIntegerTypeElementTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.CustomRealTypeElementType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomRealTypeElementTypeItemProvider customRealTypeElementTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.CustomRealTypeElementType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomRealTypeElementTypeAdapter() {
		if (customRealTypeElementTypeItemProvider == null) {
			customRealTypeElementTypeItemProvider = new CustomRealTypeElementTypeItemProvider(this);
		}

		return customRealTypeElementTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.CustomStringTypeElementType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomStringTypeElementTypeItemProvider customStringTypeElementTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.CustomStringTypeElementType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomStringTypeElementTypeAdapter() {
		if (customStringTypeElementTypeItemProvider == null) {
			customStringTypeElementTypeItemProvider = new CustomStringTypeElementTypeItemProvider(this);
		}

		return customStringTypeElementTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.DefinitionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefinitionsTypeItemProvider definitionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.DefinitionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefinitionsTypeAdapter() {
		if (definitionsTypeItemProvider == null) {
			definitionsTypeItemProvider = new DefinitionsTypeItemProvider(this);
		}

		return definitionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.DefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefinitionTypeItemProvider definitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.DefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefinitionTypeAdapter() {
		if (definitionTypeItemProvider == null) {
			definitionTypeItemProvider = new DefinitionTypeItemProvider(this);
		}

		return definitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.EllipseArcCurveCommand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EllipseArcCurveCommandItemProvider ellipseArcCurveCommandItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.EllipseArcCurveCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEllipseArcCurveCommandAdapter() {
		if (ellipseArcCurveCommandItemProvider == null) {
			ellipseArcCurveCommandItemProvider = new EllipseArcCurveCommandItemProvider(this);
		}

		return ellipseArcCurveCommandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.EllipsePrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EllipsePrimitiveItemProvider ellipsePrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.EllipsePrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEllipsePrimitiveAdapter() {
		if (ellipsePrimitiveItemProvider == null) {
			ellipsePrimitiveItemProvider = new EllipsePrimitiveItemProvider(this);
		}

		return ellipsePrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.EntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntryTypeItemProvider entryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.EntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntryTypeAdapter() {
		if (entryTypeItemProvider == null) {
			entryTypeItemProvider = new EntryTypeItemProvider(this);
		}

		return entryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.EnumDefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumDefinitionTypeItemProvider enumDefinitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.EnumDefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumDefinitionTypeAdapter() {
		if (enumDefinitionTypeItemProvider == null) {
			enumDefinitionTypeItemProvider = new EnumDefinitionTypeItemProvider(this);
		}

		return enumDefinitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.EnumerationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationTypeItemProvider enumerationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.EnumerationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationTypeAdapter() {
		if (enumerationTypeItemProvider == null) {
			enumerationTypeItemProvider = new EnumerationTypeItemProvider(this);
		}

		return enumerationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.EventType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventTypeItemProvider eventTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.EventType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventTypeAdapter() {
		if (eventTypeItemProvider == null) {
			eventTypeItemProvider = new EventTypeItemProvider(this);
		}

		return eventTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.FieldDefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FieldDefinitionTypeItemProvider fieldDefinitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.FieldDefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFieldDefinitionTypeAdapter() {
		if (fieldDefinitionTypeItemProvider == null) {
			fieldDefinitionTypeItemProvider = new FieldDefinitionTypeItemProvider(this);
		}

		return fieldDefinitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.FieldType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FieldTypeItemProvider fieldTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.FieldType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFieldTypeAdapter() {
		if (fieldTypeItemProvider == null) {
			fieldTypeItemProvider = new FieldTypeItemProvider(this);
		}

		return fieldTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.FrameProperties} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FramePropertiesItemProvider framePropertiesItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.FrameProperties}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFramePropertiesAdapter() {
		if (framePropertiesItemProvider == null) {
			framePropertiesItemProvider = new FramePropertiesItemProvider(this);
		}

		return framePropertiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.FunctionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionTypeItemProvider functionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.FunctionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionTypeAdapter() {
		if (functionTypeItemProvider == null) {
			functionTypeItemProvider = new FunctionTypeItemProvider(this);
		}

		return functionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.GestureAreaPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GestureAreaPrimitiveItemProvider gestureAreaPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.GestureAreaPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGestureAreaPrimitiveAdapter() {
		if (gestureAreaPrimitiveItemProvider == null) {
			gestureAreaPrimitiveItemProvider = new GestureAreaPrimitiveItemProvider(this);
		}

		return gestureAreaPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.GroupPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupPrimitiveItemProvider groupPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.GroupPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupPrimitiveAdapter() {
		if (groupPrimitiveItemProvider == null) {
			groupPrimitiveItemProvider = new GroupPrimitiveItemProvider(this);
		}

		return groupPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ImagePrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImagePrimitiveItemProvider imagePrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ImagePrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImagePrimitiveAdapter() {
		if (imagePrimitiveItemProvider == null) {
			imagePrimitiveItemProvider = new ImagePrimitiveItemProvider(this);
		}

		return imagePrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ImportType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportTypeItemProvider importTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ImportType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportTypeAdapter() {
		if (importTypeItemProvider == null) {
			importTypeItemProvider = new ImportTypeItemProvider(this);
		}

		return importTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.InterfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceTypeItemProvider interfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.InterfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceTypeAdapter() {
		if (interfaceTypeItemProvider == null) {
			interfaceTypeItemProvider = new InterfaceTypeItemProvider(this);
		}

		return interfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.KeyboardInputPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyboardInputPrimitiveItemProvider keyboardInputPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.KeyboardInputPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyboardInputPrimitiveAdapter() {
		if (keyboardInputPrimitiveItemProvider == null) {
			keyboardInputPrimitiveItemProvider = new KeyboardInputPrimitiveItemProvider(this);
		}

		return keyboardInputPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.LinePrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinePrimitiveItemProvider linePrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.LinePrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinePrimitiveAdapter() {
		if (linePrimitiveItemProvider == null) {
			linePrimitiveItemProvider = new LinePrimitiveItemProvider(this);
		}

		return linePrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.LineToCommand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LineToCommandItemProvider lineToCommandItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.LineToCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLineToCommandAdapter() {
		if (lineToCommandItemProvider == null) {
			lineToCommandItemProvider = new LineToCommandItemProvider(this);
		}

		return lineToCommandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.MoveToCommand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MoveToCommandItemProvider moveToCommandItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.MoveToCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMoveToCommandAdapter() {
		if (moveToCommandItemProvider == null) {
			moveToCommandItemProvider = new MoveToCommandItemProvider(this);
		}

		return moveToCommandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.OperationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationTypeItemProvider operationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.OperationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationTypeAdapter() {
		if (operationTypeItemProvider == null) {
			operationTypeItemProvider = new OperationTypeItemProvider(this);
		}

		return operationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.OtherArrayEntriesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OtherArrayEntriesTypeItemProvider otherArrayEntriesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.OtherArrayEntriesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOtherArrayEntriesTypeAdapter() {
		if (otherArrayEntriesTypeItemProvider == null) {
			otherArrayEntriesTypeItemProvider = new OtherArrayEntriesTypeItemProvider(this);
		}

		return otherArrayEntriesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.OtherEntriesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OtherEntriesTypeItemProvider otherEntriesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.OtherEntriesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOtherEntriesTypeAdapter() {
		if (otherEntriesTypeItemProvider == null) {
			otherEntriesTypeItemProvider = new OtherEntriesTypeItemProvider(this);
		}

		return otherEntriesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.OtherStructEntriesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OtherStructEntriesTypeItemProvider otherStructEntriesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.OtherStructEntriesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOtherStructEntriesTypeAdapter() {
		if (otherStructEntriesTypeItemProvider == null) {
			otherStructEntriesTypeItemProvider = new OtherStructEntriesTypeItemProvider(this);
		}

		return otherStructEntriesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.OtherUnionEntriesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OtherUnionEntriesTypeItemProvider otherUnionEntriesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.OtherUnionEntriesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOtherUnionEntriesTypeAdapter() {
		if (otherUnionEntriesTypeItemProvider == null) {
			otherUnionEntriesTypeItemProvider = new OtherUnionEntriesTypeItemProvider(this);
		}

		return otherUnionEntriesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ParamType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParamTypeItemProvider paramTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ParamType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParamTypeAdapter() {
		if (paramTypeItemProvider == null) {
			paramTypeItemProvider = new ParamTypeItemProvider(this);
		}

		return paramTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.PathArray} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathArrayItemProvider pathArrayItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.PathArray}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathArrayAdapter() {
		if (pathArrayItemProvider == null) {
			pathArrayItemProvider = new PathArrayItemProvider(this);
		}

		return pathArrayItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.PathPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathPrimitiveItemProvider pathPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.PathPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathPrimitiveAdapter() {
		if (pathPrimitiveItemProvider == null) {
			pathPrimitiveItemProvider = new PathPrimitiveItemProvider(this);
		}

		return pathPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.PointerAreaPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PointerAreaPrimitiveItemProvider pointerAreaPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.PointerAreaPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPointerAreaPrimitiveAdapter() {
		if (pointerAreaPrimitiveItemProvider == null) {
			pointerAreaPrimitiveItemProvider = new PointerAreaPrimitiveItemProvider(this);
		}

		return pointerAreaPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.PointerGestureAreaPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PointerGestureAreaPrimitiveItemProvider pointerGestureAreaPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.PointerGestureAreaPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPointerGestureAreaPrimitiveAdapter() {
		if (pointerGestureAreaPrimitiveItemProvider == null) {
			pointerGestureAreaPrimitiveItemProvider = new PointerGestureAreaPrimitiveItemProvider(this);
		}

		return pointerGestureAreaPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.PointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PointTypeItemProvider pointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.PointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPointTypeAdapter() {
		if (pointTypeItemProvider == null) {
			pointTypeItemProvider = new PointTypeItemProvider(this);
		}

		return pointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.PolarLineComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolarLineComponentItemProvider polarLineComponentItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.PolarLineComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolarLineComponentAdapter() {
		if (polarLineComponentItemProvider == null) {
			polarLineComponentItemProvider = new PolarLineComponentItemProvider(this);
		}

		return polarLineComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.PolygonPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolygonPrimitiveItemProvider polygonPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.PolygonPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolygonPrimitiveAdapter() {
		if (polygonPrimitiveItemProvider == null) {
			polygonPrimitiveItemProvider = new PolygonPrimitiveItemProvider(this);
		}

		return polygonPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.PolylinePrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolylinePrimitiveItemProvider polylinePrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.PolylinePrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolylinePrimitiveAdapter() {
		if (polylinePrimitiveItemProvider == null) {
			polylinePrimitiveItemProvider = new PolylinePrimitiveItemProvider(this);
		}

		return polylinePrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.PositionListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PositionListTypeItemProvider positionListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.PositionListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPositionListTypeAdapter() {
		if (positionListTypeItemProvider == null) {
			positionListTypeItemProvider = new PositionListTypeItemProvider(this);
		}

		return positionListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.PrivatePropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrivatePropertyTypeItemProvider privatePropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.PrivatePropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrivatePropertyTypeAdapter() {
		if (privatePropertyTypeItemProvider == null) {
			privatePropertyTypeItemProvider = new PrivatePropertyTypeItemProvider(this);
		}

		return privatePropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.PropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyTypeItemProvider propertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.PropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyTypeAdapter() {
		if (propertyTypeItemProvider == null) {
			propertyTypeItemProvider = new PropertyTypeItemProvider(this);
		}

		return propertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.RectPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RectPrimitiveItemProvider rectPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.RectPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRectPrimitiveAdapter() {
		if (rectPrimitiveItemProvider == null) {
			rectPrimitiveItemProvider = new RectPrimitiveItemProvider(this);
		}

		return rectPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.RelativeClosePathCommand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelativeClosePathCommandItemProvider relativeClosePathCommandItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.RelativeClosePathCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelativeClosePathCommandAdapter() {
		if (relativeClosePathCommandItemProvider == null) {
			relativeClosePathCommandItemProvider = new RelativeClosePathCommandItemProvider(this);
		}

		return relativeClosePathCommandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.RelativeCubicBezierCurveCommand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelativeCubicBezierCurveCommandItemProvider relativeCubicBezierCurveCommandItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.RelativeCubicBezierCurveCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelativeCubicBezierCurveCommandAdapter() {
		if (relativeCubicBezierCurveCommandItemProvider == null) {
			relativeCubicBezierCurveCommandItemProvider = new RelativeCubicBezierCurveCommandItemProvider(this);
		}

		return relativeCubicBezierCurveCommandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.RelativeEllipseArcCurveCommand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelativeEllipseArcCurveCommandItemProvider relativeEllipseArcCurveCommandItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.RelativeEllipseArcCurveCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelativeEllipseArcCurveCommandAdapter() {
		if (relativeEllipseArcCurveCommandItemProvider == null) {
			relativeEllipseArcCurveCommandItemProvider = new RelativeEllipseArcCurveCommandItemProvider(this);
		}

		return relativeEllipseArcCurveCommandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.RelativeLineToCommand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelativeLineToCommandItemProvider relativeLineToCommandItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.RelativeLineToCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelativeLineToCommandAdapter() {
		if (relativeLineToCommandItemProvider == null) {
			relativeLineToCommandItemProvider = new RelativeLineToCommandItemProvider(this);
		}

		return relativeLineToCommandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.RelativeMoveToCommand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelativeMoveToCommandItemProvider relativeMoveToCommandItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.RelativeMoveToCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelativeMoveToCommandAdapter() {
		if (relativeMoveToCommandItemProvider == null) {
			relativeMoveToCommandItemProvider = new RelativeMoveToCommandItemProvider(this);
		}

		return relativeMoveToCommandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ReplicatePrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReplicatePrimitiveItemProvider replicatePrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ReplicatePrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReplicatePrimitiveAdapter() {
		if (replicatePrimitiveItemProvider == null) {
			replicatePrimitiveItemProvider = new ReplicatePrimitiveItemProvider(this);
		}

		return replicatePrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ReverseVideoProperties} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReverseVideoPropertiesItemProvider reverseVideoPropertiesItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ReverseVideoProperties}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReverseVideoPropertiesAdapter() {
		if (reverseVideoPropertiesItemProvider == null) {
			reverseVideoPropertiesItemProvider = new ReverseVideoPropertiesItemProvider(this);
		}

		return reverseVideoPropertiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.ScrollWheelInputPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScrollWheelInputPrimitiveItemProvider scrollWheelInputPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.ScrollWheelInputPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScrollWheelInputPrimitiveAdapter() {
		if (scrollWheelInputPrimitiveItemProvider == null) {
			scrollWheelInputPrimitiveItemProvider = new ScrollWheelInputPrimitiveItemProvider(this);
		}

		return scrollWheelInputPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.SimpleTextPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleTextPrimitiveItemProvider simpleTextPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.SimpleTextPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleTextPrimitiveAdapter() {
		if (simpleTextPrimitiveItemProvider == null) {
			simpleTextPrimitiveItemProvider = new SimpleTextPrimitiveItemProvider(this);
		}

		return simpleTextPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.StrikeThroughProperties} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StrikeThroughPropertiesItemProvider strikeThroughPropertiesItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.StrikeThroughProperties}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStrikeThroughPropertiesAdapter() {
		if (strikeThroughPropertiesItemProvider == null) {
			strikeThroughPropertiesItemProvider = new StrikeThroughPropertiesItemProvider(this);
		}

		return strikeThroughPropertiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.StructDefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructDefinitionTypeItemProvider structDefinitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.StructDefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructDefinitionTypeAdapter() {
		if (structDefinitionTypeItemProvider == null) {
			structDefinitionTypeItemProvider = new StructDefinitionTypeItemProvider(this);
		}

		return structDefinitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.StructEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructEntryTypeItemProvider structEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.StructEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructEntryTypeAdapter() {
		if (structEntryTypeItemProvider == null) {
			structEntryTypeItemProvider = new StructEntryTypeItemProvider(this);
		}

		return structEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.StructEventType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructEventTypeItemProvider structEventTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.StructEventType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructEventTypeAdapter() {
		if (structEventTypeItemProvider == null) {
			structEventTypeItemProvider = new StructEventTypeItemProvider(this);
		}

		return structEventTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.StructFieldType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructFieldTypeItemProvider structFieldTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.StructFieldType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructFieldTypeAdapter() {
		if (structFieldTypeItemProvider == null) {
			structFieldTypeItemProvider = new StructFieldTypeItemProvider(this);
		}

		return structFieldTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.StructPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructPropertyTypeItemProvider structPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.StructPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructPropertyTypeAdapter() {
		if (structPropertyTypeItemProvider == null) {
			structPropertyTypeItemProvider = new StructPropertyTypeItemProvider(this);
		}

		return structPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.SwitchNodePrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SwitchNodePrimitiveItemProvider switchNodePrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.SwitchNodePrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSwitchNodePrimitiveAdapter() {
		if (switchNodePrimitiveItemProvider == null) {
			switchNodePrimitiveItemProvider = new SwitchNodePrimitiveItemProvider(this);
		}

		return switchNodePrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.TouchAreaPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TouchAreaPrimitiveItemProvider touchAreaPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.TouchAreaPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTouchAreaPrimitiveAdapter() {
		if (touchAreaPrimitiveItemProvider == null) {
			touchAreaPrimitiveItemProvider = new TouchAreaPrimitiveItemProvider(this);
		}

		return touchAreaPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.TransformGroupPrimitive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformGroupPrimitiveItemProvider transformGroupPrimitiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.TransformGroupPrimitive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformGroupPrimitiveAdapter() {
		if (transformGroupPrimitiveItemProvider == null) {
			transformGroupPrimitiveItemProvider = new TransformGroupPrimitiveItemProvider(this);
		}

		return transformGroupPrimitiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.TransformMatrixType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformMatrixTypeItemProvider transformMatrixTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.TransformMatrixType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformMatrixTypeAdapter() {
		if (transformMatrixTypeItemProvider == null) {
			transformMatrixTypeItemProvider = new TransformMatrixTypeItemProvider(this);
		}

		return transformMatrixTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.TransformRotateType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformRotateTypeItemProvider transformRotateTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.TransformRotateType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformRotateTypeAdapter() {
		if (transformRotateTypeItemProvider == null) {
			transformRotateTypeItemProvider = new TransformRotateTypeItemProvider(this);
		}

		return transformRotateTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.TransformScaleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformScaleTypeItemProvider transformScaleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.TransformScaleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformScaleTypeAdapter() {
		if (transformScaleTypeItemProvider == null) {
			transformScaleTypeItemProvider = new TransformScaleTypeItemProvider(this);
		}

		return transformScaleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.TransformSkewXType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformSkewXTypeItemProvider transformSkewXTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.TransformSkewXType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformSkewXTypeAdapter() {
		if (transformSkewXTypeItemProvider == null) {
			transformSkewXTypeItemProvider = new TransformSkewXTypeItemProvider(this);
		}

		return transformSkewXTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.TransformSkewYType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformSkewYTypeItemProvider transformSkewYTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.TransformSkewYType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformSkewYTypeAdapter() {
		if (transformSkewYTypeItemProvider == null) {
			transformSkewYTypeItemProvider = new TransformSkewYTypeItemProvider(this);
		}

		return transformSkewYTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.TransformTranslateType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformTranslateTypeItemProvider transformTranslateTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.TransformTranslateType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformTranslateTypeAdapter() {
		if (transformTranslateTypeItemProvider == null) {
			transformTranslateTypeItemProvider = new TransformTranslateTypeItemProvider(this);
		}

		return transformTranslateTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.TransformType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformTypeItemProvider transformTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.TransformType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformTypeAdapter() {
		if (transformTypeItemProvider == null) {
			transformTypeItemProvider = new TransformTypeItemProvider(this);
		}

		return transformTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.TreeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TreeTypeItemProvider treeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.TreeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTreeTypeAdapter() {
		if (treeTypeItemProvider == null) {
			treeTypeItemProvider = new TreeTypeItemProvider(this);
		}

		return treeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.TypeAlternativeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeAlternativeTypeItemProvider typeAlternativeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.TypeAlternativeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeAlternativeTypeAdapter() {
		if (typeAlternativeTypeItemProvider == null) {
			typeAlternativeTypeItemProvider = new TypeAlternativeTypeItemProvider(this);
		}

		return typeAlternativeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.UnderlineProperties} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnderlinePropertiesItemProvider underlinePropertiesItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.UnderlineProperties}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnderlinePropertiesAdapter() {
		if (underlinePropertiesItemProvider == null) {
			underlinePropertiesItemProvider = new UnderlinePropertiesItemProvider(this);
		}

		return underlinePropertiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.UnionDefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnionDefinitionTypeItemProvider unionDefinitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.UnionDefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnionDefinitionTypeAdapter() {
		if (unionDefinitionTypeItemProvider == null) {
			unionDefinitionTypeItemProvider = new UnionDefinitionTypeItemProvider(this);
		}

		return unionDefinitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.UnionEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnionEntryTypeItemProvider unionEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.UnionEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnionEntryTypeAdapter() {
		if (unionEntryTypeItemProvider == null) {
			unionEntryTypeItemProvider = new UnionEntryTypeItemProvider(this);
		}

		return unionEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.UnionEventType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnionEventTypeItemProvider unionEventTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.UnionEventType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnionEventTypeAdapter() {
		if (unionEventTypeItemProvider == null) {
			unionEventTypeItemProvider = new UnionEventTypeItemProvider(this);
		}

		return unionEventTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.UnionFieldType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnionFieldTypeItemProvider unionFieldTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.UnionFieldType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnionFieldTypeAdapter() {
		if (unionFieldTypeItemProvider == null) {
			unionFieldTypeItemProvider = new UnionFieldTypeItemProvider(this);
		}

		return unionFieldTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.UnionPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnionPropertyTypeItemProvider unionPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.UnionPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnionPropertyTypeAdapter() {
		if (unionPropertyTypeItemProvider == null) {
			unionPropertyTypeItemProvider = new UnionPropertyTypeItemProvider(this);
		}

		return unionPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.PropertyValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyValueItemProvider propertyValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.PropertyValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyValueAdapter() {
		if (propertyValueItemProvider == null) {
			propertyValueItemProvider = new PropertyValueItemProvider(this);
		}

		return propertyValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.ng661designer.part2.WidgetComposition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WidgetCompositionItemProvider widgetCompositionItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.ng661designer.part2.WidgetComposition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWidgetCompositionAdapter() {
		if (widgetCompositionItemProvider == null) {
			widgetCompositionItemProvider = new WidgetCompositionItemProvider(this);
		}

		return widgetCompositionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (arcComponentItemProvider != null) arcComponentItemProvider.dispose();
		if (arrayDefinitionTypeItemProvider != null) arrayDefinitionTypeItemProvider.dispose();
		if (arrayEntryTypeItemProvider != null) arrayEntryTypeItemProvider.dispose();
		if (arrayEventTypeItemProvider != null) arrayEventTypeItemProvider.dispose();
		if (arrayFieldDefinitionTypeItemProvider != null) arrayFieldDefinitionTypeItemProvider.dispose();
		if (arrayFieldTypeItemProvider != null) arrayFieldTypeItemProvider.dispose();
		if (arrayPropertyTypeItemProvider != null) arrayPropertyTypeItemProvider.dispose();
		if (behaviorTypeItemProvider != null) behaviorTypeItemProvider.dispose();
		if (childPrimitiveItemProvider != null) childPrimitiveItemProvider.dispose();
		if (circlePrimitiveItemProvider != null) circlePrimitiveItemProvider.dispose();
		if (clipPathPrimitiveItemProvider != null) clipPathPrimitiveItemProvider.dispose();
		if (clippingContainerPrimitiveItemProvider != null) clippingContainerPrimitiveItemProvider.dispose();
		if (clockTypeItemProvider != null) clockTypeItemProvider.dispose();
		if (closePathCommandItemProvider != null) closePathCommandItemProvider.dispose();
		if (componentDefinitionTypeItemProvider != null) componentDefinitionTypeItemProvider.dispose();
		if (crownComponentItemProvider != null) crownComponentItemProvider.dispose();
		if (cubicBezierCurveCommandItemProvider != null) cubicBezierCurveCommandItemProvider.dispose();
		if (customIntegerTypeElementTypeItemProvider != null) customIntegerTypeElementTypeItemProvider.dispose();
		if (customRealTypeElementTypeItemProvider != null) customRealTypeElementTypeItemProvider.dispose();
		if (customStringTypeElementTypeItemProvider != null) customStringTypeElementTypeItemProvider.dispose();
		if (definitionsTypeItemProvider != null) definitionsTypeItemProvider.dispose();
		if (definitionTypeItemProvider != null) definitionTypeItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (ellipseArcCurveCommandItemProvider != null) ellipseArcCurveCommandItemProvider.dispose();
		if (ellipsePrimitiveItemProvider != null) ellipsePrimitiveItemProvider.dispose();
		if (entryTypeItemProvider != null) entryTypeItemProvider.dispose();
		if (enumDefinitionTypeItemProvider != null) enumDefinitionTypeItemProvider.dispose();
		if (enumerationTypeItemProvider != null) enumerationTypeItemProvider.dispose();
		if (eventTypeItemProvider != null) eventTypeItemProvider.dispose();
		if (fieldDefinitionTypeItemProvider != null) fieldDefinitionTypeItemProvider.dispose();
		if (fieldTypeItemProvider != null) fieldTypeItemProvider.dispose();
		if (framePropertiesItemProvider != null) framePropertiesItemProvider.dispose();
		if (functionTypeItemProvider != null) functionTypeItemProvider.dispose();
		if (gestureAreaPrimitiveItemProvider != null) gestureAreaPrimitiveItemProvider.dispose();
		if (groupPrimitiveItemProvider != null) groupPrimitiveItemProvider.dispose();
		if (imagePrimitiveItemProvider != null) imagePrimitiveItemProvider.dispose();
		if (importTypeItemProvider != null) importTypeItemProvider.dispose();
		if (interfaceTypeItemProvider != null) interfaceTypeItemProvider.dispose();
		if (keyboardInputPrimitiveItemProvider != null) keyboardInputPrimitiveItemProvider.dispose();
		if (linePrimitiveItemProvider != null) linePrimitiveItemProvider.dispose();
		if (lineToCommandItemProvider != null) lineToCommandItemProvider.dispose();
		if (moveToCommandItemProvider != null) moveToCommandItemProvider.dispose();
		if (operationTypeItemProvider != null) operationTypeItemProvider.dispose();
		if (otherArrayEntriesTypeItemProvider != null) otherArrayEntriesTypeItemProvider.dispose();
		if (otherEntriesTypeItemProvider != null) otherEntriesTypeItemProvider.dispose();
		if (otherStructEntriesTypeItemProvider != null) otherStructEntriesTypeItemProvider.dispose();
		if (otherUnionEntriesTypeItemProvider != null) otherUnionEntriesTypeItemProvider.dispose();
		if (paramTypeItemProvider != null) paramTypeItemProvider.dispose();
		if (pathArrayItemProvider != null) pathArrayItemProvider.dispose();
		if (pathPrimitiveItemProvider != null) pathPrimitiveItemProvider.dispose();
		if (pointerAreaPrimitiveItemProvider != null) pointerAreaPrimitiveItemProvider.dispose();
		if (pointerGestureAreaPrimitiveItemProvider != null) pointerGestureAreaPrimitiveItemProvider.dispose();
		if (pointTypeItemProvider != null) pointTypeItemProvider.dispose();
		if (polarLineComponentItemProvider != null) polarLineComponentItemProvider.dispose();
		if (polygonPrimitiveItemProvider != null) polygonPrimitiveItemProvider.dispose();
		if (polylinePrimitiveItemProvider != null) polylinePrimitiveItemProvider.dispose();
		if (positionListTypeItemProvider != null) positionListTypeItemProvider.dispose();
		if (privatePropertyTypeItemProvider != null) privatePropertyTypeItemProvider.dispose();
		if (propertyTypeItemProvider != null) propertyTypeItemProvider.dispose();
		if (rectPrimitiveItemProvider != null) rectPrimitiveItemProvider.dispose();
		if (relativeClosePathCommandItemProvider != null) relativeClosePathCommandItemProvider.dispose();
		if (relativeCubicBezierCurveCommandItemProvider != null) relativeCubicBezierCurveCommandItemProvider.dispose();
		if (relativeEllipseArcCurveCommandItemProvider != null) relativeEllipseArcCurveCommandItemProvider.dispose();
		if (relativeLineToCommandItemProvider != null) relativeLineToCommandItemProvider.dispose();
		if (relativeMoveToCommandItemProvider != null) relativeMoveToCommandItemProvider.dispose();
		if (replicatePrimitiveItemProvider != null) replicatePrimitiveItemProvider.dispose();
		if (reverseVideoPropertiesItemProvider != null) reverseVideoPropertiesItemProvider.dispose();
		if (scrollWheelInputPrimitiveItemProvider != null) scrollWheelInputPrimitiveItemProvider.dispose();
		if (simpleTextPrimitiveItemProvider != null) simpleTextPrimitiveItemProvider.dispose();
		if (strikeThroughPropertiesItemProvider != null) strikeThroughPropertiesItemProvider.dispose();
		if (structDefinitionTypeItemProvider != null) structDefinitionTypeItemProvider.dispose();
		if (structEntryTypeItemProvider != null) structEntryTypeItemProvider.dispose();
		if (structEventTypeItemProvider != null) structEventTypeItemProvider.dispose();
		if (structFieldTypeItemProvider != null) structFieldTypeItemProvider.dispose();
		if (structPropertyTypeItemProvider != null) structPropertyTypeItemProvider.dispose();
		if (switchNodePrimitiveItemProvider != null) switchNodePrimitiveItemProvider.dispose();
		if (touchAreaPrimitiveItemProvider != null) touchAreaPrimitiveItemProvider.dispose();
		if (transformGroupPrimitiveItemProvider != null) transformGroupPrimitiveItemProvider.dispose();
		if (transformMatrixTypeItemProvider != null) transformMatrixTypeItemProvider.dispose();
		if (transformRotateTypeItemProvider != null) transformRotateTypeItemProvider.dispose();
		if (transformScaleTypeItemProvider != null) transformScaleTypeItemProvider.dispose();
		if (transformSkewXTypeItemProvider != null) transformSkewXTypeItemProvider.dispose();
		if (transformSkewYTypeItemProvider != null) transformSkewYTypeItemProvider.dispose();
		if (transformTranslateTypeItemProvider != null) transformTranslateTypeItemProvider.dispose();
		if (transformTypeItemProvider != null) transformTypeItemProvider.dispose();
		if (treeTypeItemProvider != null) treeTypeItemProvider.dispose();
		if (typeAlternativeTypeItemProvider != null) typeAlternativeTypeItemProvider.dispose();
		if (underlinePropertiesItemProvider != null) underlinePropertiesItemProvider.dispose();
		if (unionDefinitionTypeItemProvider != null) unionDefinitionTypeItemProvider.dispose();
		if (unionEntryTypeItemProvider != null) unionEntryTypeItemProvider.dispose();
		if (unionEventTypeItemProvider != null) unionEventTypeItemProvider.dispose();
		if (unionFieldTypeItemProvider != null) unionFieldTypeItemProvider.dispose();
		if (unionPropertyTypeItemProvider != null) unionPropertyTypeItemProvider.dispose();
		if (propertyValueItemProvider != null) propertyValueItemProvider.dispose();
		if (widgetCompositionItemProvider != null) widgetCompositionItemProvider.dispose();
	}

}
