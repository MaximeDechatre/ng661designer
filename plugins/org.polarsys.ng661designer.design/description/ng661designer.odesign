<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/table/description/1.1.0" xmlns:description_2="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:description_3="http://www.eclipse.org/sirius/tree/description/1.0.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" name="ng661designer" version="12.0.0.2017041100">
  <ownedViewpoints name="NG661Designer" modelFileExtension="part2">
    <ownedRepresentations xsi:type="description_1:EditionTableDescription" name="InterfacePropertiesDefinition" label="Interface Properties Definition" titleExpression="aql:self.eContainer().name + ' Interface Properties Definition'" initialisation="true" domainClass="part2::InterfaceType" initialHeaderColumnWidth="150">
      <ownedLineMappings name="IPD_Properties" domainClass="part2::PropertyType" semanticCandidatesExpression="feature:property" headerLabelExpression="Property">
        <delete name="IPD_DeleteProperty" label="Delete Property">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="IPD_ArrayProperties" domainClass="part2::ArrayPropertyType" semanticCandidatesExpression="feature:arrayProperty" headerLabelExpression="Array Property">
        <ownedSubLines name="IPD_Entry" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_ArrayEvent']" domainClass="part2::EntryType" semanticCandidatesExpression="feature:entry" headerLabelExpression="Entry">
          <delete name="IPD_DeleteEntry" label="Delete Entry">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <ownedSubLines name="IPD_OtherEntries" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_ArrayEvent']" domainClass="part2::OtherEntriesType" semanticCandidatesExpression="feature:otherEntries" headerLabelExpression="Other Entries">
          <delete name="IPD_DeleteOtherEntries" label="Delete Other Entries">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <ownedSubLines name="IPD_ArrayEntry" reusedSubLines="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_Entry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherStructEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_UnionEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherUnionEntries']" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_ArrayEvent']" domainClass="part2::ArrayEntryType" semanticCandidatesExpression="feature:arrayEntry" headerLabelExpression="Array Entry">
          <create name="IPD_ArrayEntry_CreateEntry" label="Create Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_Entry']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::EntryType" referenceName="entry"/>
          </create>
          <create name="IPD_ArrayEntry_CreateOtherEntries" label="Create Other Entries" precondition="aql:self.otherEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherEntries']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherEntriesType" referenceName="otherEntries"/>
          </create>
          <create name="IPD_ArrayEntry_CreateArrayEntry" label="Create Array Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayEntryType" referenceName="arrayEntry"/>
          </create>
          <create name="IPD_ArrayEntry_CreateOtherArrayEntries" label="Create Other Array Entries" precondition="aql:self.otherArrayEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherArrayEntriesType" referenceName="otherArrayEntries"/>
          </create>
          <create name="IPD_ArrayEntry_CreateStructEntry" label="Create Struct Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructEntryType" referenceName="structEntry"/>
          </create>
          <create name="IPD_ArrayEntry_CreateOtherStructEntries" label="Create Other Struct Entries" precondition="aql:self.otherStructEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherStructEntries']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherStructEntriesType" referenceName="otherStructEntries"/>
          </create>
          <create name="IPD_ArrayEntry_CreateUnionEntry" label="Create Union Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_UnionEntry']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionEntryType" referenceName="unionEntry"/>
          </create>
          <create name="IPD_ArrayEntry_CreateOtherUnionEntries" label="Create Other Union Entries" precondition="aql:self.otherUnionEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherUnionEntries']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherUnionEntriesType" referenceName="otherUnionEntries"/>
          </create>
          <delete name="IPD_DeleteArrayEntry" label="Delete Array Entry">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <ownedSubLines name="IPD_OtherArrayEntries" reusedSubLines="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_Entry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherStructEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_UnionEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherUnionEntries']" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_ArrayEvent']" domainClass="part2::OtherArrayEntriesType" semanticCandidatesExpression="feature:otherArrayEntries" headerLabelExpression="Other Array Entries">
          <create name="IPD_OtherArrayEntry_CreateEntry" label="Create Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_Entry']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::EntryType" referenceName="entry"/>
          </create>
          <create name="IPD_OtherArrayEntry_CreateOtherEntries" label="Create Other Entries" precondition="aql:self.otherEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherEntries']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherEntriesType" referenceName="otherEntries"/>
          </create>
          <create name="IPD_OtherArrayEntry_CreateArrayEntry" label="Create Array Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayEntryType" referenceName="arrayEntry"/>
          </create>
          <create name="IPD_OtherArrayEntry_CreateOtherArrayEntries" label="Create Other Array Entries" precondition="aql:self.otherArrayEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherArrayEntriesType" referenceName="otherArrayEntries"/>
          </create>
          <create name="IPD_OtherArrayEntry_CreateStructEntry" label="Create Struct Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructEntryType" referenceName="structEntry"/>
          </create>
          <create name="IPD_OtherArrayEntry_CreateOtherStructEntries" label="Create Other Struct Entries" precondition="aql:self.otherStructEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherStructEntries']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherStructEntriesType" referenceName="otherStructEntries"/>
          </create>
          <create name="IPD_OtherArrayEntry_CreateUnionEntry" label="Create Union Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_UnionEntry']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionEntryType" referenceName="unionEntry"/>
          </create>
          <create name="IPD_OtherArrayEntry_CreateOtherUnionEntries" label="Create Other Union Entries" precondition="aql:self.otherUnionEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherUnionEntries']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherUnionEntriesType" referenceName="otherUnionEntries"/>
          </create>
          <delete name="IPD_DeleteOtherArrayEntries" label="Delete Other Array Entries">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <ownedSubLines name="IPD_StructEntry" reusedSubLines="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_Field'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_EnumField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_UnionField']" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_ArrayEvent']" domainClass="part2::StructEntryType" semanticCandidatesExpression="feature:structEntry" headerLabelExpression="Struct Entry">
          <create name="IPD_StructEntry_CreateField" label="Create Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_Field']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldType" referenceName="field">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'Field' + element.field->size()"/>
            </firstModelOperation>
          </create>
          <create name="IPD_StructEntry_CreateArrayField" label="Create Array Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayFieldType" referenceName="arrayField">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'ArrayField' + element.arrayField->size()"/>
            </firstModelOperation>
          </create>
          <create name="IPD_StructEntry_CreateStructField" label="Create Struct Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructFieldType" referenceName="structField">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'StructField' + element.structField->size()"/>
            </firstModelOperation>
          </create>
          <create name="IPD_StructEntry_CreateEnumField" label="Create Enum Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_EnumField']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldType" referenceName="enumField">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'EnumField' + element.enumField->size()"/>
            </firstModelOperation>
          </create>
          <create name="IPD_StructEntry_CreateUnionField" label="Create Union Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_UnionField']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionFieldType" referenceName="unionField">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'UnionField' + element.unionField->size()"/>
            </firstModelOperation>
          </create>
          <delete name="IPD_DeleteStructEntry" label="Delete Struct Entry">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <ownedSubLines name="IPD_OtherStructEntries" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_ArrayEvent']" domainClass="part2::OtherStructEntriesType" semanticCandidatesExpression="feature:otherStructEntries" headerLabelExpression="Other Struct Entries">
          <create name="IPD_OtherStructEntry_CreateField" label="Create Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_Field']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldType" referenceName="field">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'Field' + element.field->size()"/>
            </firstModelOperation>
          </create>
          <create name="IPD_OtherStructEntry_CreateArrayField" label="Create Array Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayFieldType" referenceName="arrayField">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'ArrayField' + element.arrayField->size()"/>
            </firstModelOperation>
          </create>
          <create name="IPD_OtherStructEntry_CreateStructField" label="Create Struct Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructFieldType" referenceName="structField">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'StructField' + element.structField->size()"/>
            </firstModelOperation>
          </create>
          <create name="IPD_OtherStructEntry_CreateEnumField" label="Create Enum Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_EnumField']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldType" referenceName="enumField">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'EnumField' + element.enumField->size()"/>
            </firstModelOperation>
          </create>
          <create name="IPD_OtherStructEntry_CreateUnionField" label="Create Union Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_UnionField']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionFieldType" referenceName="unionField">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'UnionField' + element.unionField->size()"/>
            </firstModelOperation>
          </create>
          <delete name="IPD_DeleteOtherStructEntries" label="Delete Other Struct Entries">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <ownedSubLines name="IPD_UnionEntry" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_ArrayEvent']" domainClass="part2::UnionEntryType" semanticCandidatesExpression="feature:unionEntry" headerLabelExpression="Union Entry">
          <delete name="IPD_DeleteUnionEntry" label="Delete Union Entry">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <ownedSubLines name="IPD_OtherUnionEntries" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_ArrayEvent']" domainClass="part2::OtherUnionEntriesType" semanticCandidatesExpression="feature:otherUnionEntries" headerLabelExpression="Other Union Entries">
          <delete name="IPD_DeleteOtherUnionEntries" label="Delete Other Union Entries">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <create name="IPD_CreateEntry" label="Create Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_Entry']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::EntryType" referenceName="entry"/>
        </create>
        <create name="IPD_CreateOtherEntries" label="Create Other Entries" precondition="aql:self.otherEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherEntries']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherEntriesType" referenceName="otherEntries"/>
        </create>
        <create name="IPD_CreateArrayEntry" label="Create Array Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayEntryType" referenceName="arrayEntry"/>
        </create>
        <create name="IPD_CreateOtherArrayEntries" label="Create Other Array Entries" precondition="aql:self.otherArrayEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherArrayEntriesType" referenceName="otherArrayEntries"/>
        </create>
        <create name="IPD_CreateStructEntry" label="Create Struct Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructEntryType" referenceName="structEntry"/>
        </create>
        <create name="IPD_CreateOtherStructEntries" label="Create Other Struct Entries" precondition="aql:self.otherStructEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherStructEntries']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherStructEntriesType" referenceName="otherStructEntries"/>
        </create>
        <create name="IPD_CreateUnionEntry" label="Create Union Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_UnionEntry']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionEntryType" referenceName="unionEntry"/>
        </create>
        <create name="IPD_CreateOtherUnionEntries" label="Create Other Union Entries" precondition="aql:self.otherUnionEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherUnionEntries']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherUnionEntriesType" referenceName="otherUnionEntries"/>
        </create>
        <delete name="IPD_DeleteArrayProperty" label="Delete Array Property">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="IPD_StructProperties" domainClass="part2::StructPropertyType" semanticCandidatesExpression="feature:structProperty" headerLabelExpression="Struct Property">
        <ownedSubLines name="IPD_Field" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_StructEvent']" domainClass="part2::FieldType" semanticCandidatesExpression="feature:field" headerLabelExpression="Field">
          <delete name="IPD_DeleteField" label="Delete Field">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <ownedSubLines name="IPD_ArrayField" reusedSubLines="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_Entry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherStructEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_UnionEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherUnionEntries']" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_StructEvent']" domainClass="part2::ArrayFieldType" semanticCandidatesExpression="feature:arrayField" headerLabelExpression="Array Field">
          <create name="IPD_ArrayField_CreateEntry" label="Create Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_Entry']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::EntryType" referenceName="entry"/>
          </create>
          <create name="IPD_ArrayField_CreateOtherEntries" label="Create Other Entries" precondition="aql:self.otherEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherEntries']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherEntriesType" referenceName="otherEntries"/>
          </create>
          <create name="IPD_ArrayField_CreateArrayEntry" label="Create Array Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayEntryType" referenceName="arrayEntry"/>
          </create>
          <create name="IPD_ArrayField_CreateOtherArrayEntries" label="Create Other Array Entries" precondition="aql:self.otherArrayEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherArrayEntriesType" referenceName="otherArrayEntries"/>
          </create>
          <create name="IPD_ArrayField_CreateStructEntry" label="Create Struct Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructEntryType" referenceName="structEntry"/>
          </create>
          <create name="IPD_ArrayField_CreateOtherStructEntries" label="Create Other Struct Entries" precondition="aql:self.otherStructEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherStructEntries']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherStructEntriesType" referenceName="otherStructEntries"/>
          </create>
          <create name="IPD_ArrayField_CreateUnionEntry" label="Create Union Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_UnionEntry']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionEntryType" referenceName="unionEntry"/>
          </create>
          <create name="IPD_ArrayField_CreateOtherUnionEntries" label="Create Other Union Entries" precondition="aql:self.otherUnionEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherUnionEntries']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherUnionEntriesType" referenceName="otherUnionEntries"/>
          </create>
          <delete name="IPD_DeleteArrayField" label="Delete Array Field">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <ownedSubLines name="IPD_StructField" reusedSubLines="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_Field'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_EnumField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_UnionField']" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_StructEvent']" domainClass="part2::StructFieldType" semanticCandidatesExpression="feature:structField" headerLabelExpression="Struct Field">
          <create name="IPD_StructField_CreateField" label="Create Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_Field']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldType" referenceName="field">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'Field' + element.field->size()"/>
            </firstModelOperation>
          </create>
          <create name="IPD_StructField_CreateArrayField" label="Create Array Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayFieldType" referenceName="arrayField">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'ArrayField' + element.arrayField->size()"/>
            </firstModelOperation>
          </create>
          <create name="IPD_StructField_CreateStructField" label="Create Struct Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructFieldType" referenceName="structField">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'StructField' + element.structField->size()"/>
            </firstModelOperation>
          </create>
          <create name="IPD_EnumField_CreateEnumField" label="Create Enum Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_EnumField']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldType" referenceName="enumField">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'EnumField' + element.enumField->size()"/>
            </firstModelOperation>
          </create>
          <create name="IPD_UnionField_CreateUnionField" label="Create Union Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_UnionField']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionFieldType" referenceName="unionField">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'UnionField' + element.unionField->size()"/>
            </firstModelOperation>
          </create>
          <delete name="IPD_DeleteStructField" label="Delete Struct Field">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <ownedSubLines name="IPD_EnumField" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_StructEvent']" domainClass="part2::FieldType" semanticCandidatesExpression="feature:enumField" headerLabelExpression="Enum Field">
          <delete name="IPD_DeleteEnumField" label="Delete Enum Field">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <ownedSubLines name="IPD_UnionField" reusedInMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_StructEvent']" domainClass="part2::UnionFieldType" semanticCandidatesExpression="feature:unionField" headerLabelExpression="Union Field">
          <delete name="IPD_DeleteUnionField" label="Delete Union Field">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <create name="IPD_CreateField" label="Create Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_Field']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldType" referenceName="field">
            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'Field' + element.field->size()"/>
          </firstModelOperation>
        </create>
        <create name="IPD_CreateArrayField" label="Create Array Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayFieldType" referenceName="arrayField">
            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'ArrayField' + element.arrayField->size()"/>
          </firstModelOperation>
        </create>
        <create name="IPD_CreateStructField" label="Create Struct Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructFieldType" referenceName="structField">
            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'StructField' + element.structField->size()"/>
          </firstModelOperation>
        </create>
        <create name="IPD_CreateEnumField" label="Create Enum Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_EnumField']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldType" referenceName="enumField">
            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'EnumField' + element.enumField->size()"/>
          </firstModelOperation>
        </create>
        <create name="IPD_CreateUnionField" label="Create Union Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_UnionField']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionFieldType" referenceName="unionField">
            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'UnionField' + element.unionField->size()"/>
          </firstModelOperation>
        </create>
        <delete name="IPD_DeleteStructProperty" label="Delete Struct Property">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="IPD_EnumProperties" domainClass="part2::PropertyType" semanticCandidatesExpression="feature:enumProperty" headerLabelExpression="Enum Property">
        <delete name="IPD_DeleteEnumProperty" label="Delete Enum Property">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="IPD_UnionProperties" domainClass="part2::UnionPropertyType" semanticCandidatesExpression="feature:unionProperty" headerLabelExpression="Union Property">
        <delete name="IPD_DeleteUnionProperty" label="Delete Union Property">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedCreateLine name="IPD_CreateProperty" label="Create Property" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_Properties']">
        <variables name="root" documentation="The semantic element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::PropertyType" referenceName="property">
          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'Property' + element.property->size()"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedCreateLine name="IPD_CreateArrayProperty" label="Create Array Property" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']">
        <variables name="root" documentation="The semantic element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayPropertyType" referenceName="arrayProperty">
          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'ArrayProperty' + element.arrayProperty->size()"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedCreateLine name="IPD_CreateStructProperty" label="Create Struct Property" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']">
        <variables name="root" documentation="The semantic element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructPropertyType" referenceName="structProperty">
          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'StructProperty' + element.structProperty->size()"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedCreateLine name="IPD_CreateEnumProperty" label="Create Enum Property" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_EnumProperties']">
        <variables name="root" documentation="The semantic element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::PropertyType" referenceName="enumProperty">
          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'EnumProperty' + element.enumProperty->size()"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedCreateLine name="IPD_CreateUnionProperty" label="Create Union Property" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_UnionProperties']">
        <variables name="root" documentation="The semantic element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionPropertyType" referenceName="unionProperty">
          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'UnionProperty' + element.unionProperty->size()"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedColumnMappings name="IPD_Name" headerLabelExpression="Name" featureName="name"/>
      <ownedColumnMappings name="IPD_Type" headerLabelExpression="Type" featureName="type"/>
      <ownedColumnMappings name="IPD_Modality" headerLabelExpression="Modality" featureName="modality"/>
      <ownedColumnMappings name="IPD_Value" headerLabelExpression="Value" featureName="value"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:EditionTableDescription" name="InterfaceEventDefinition" label="Interface Event Definition" titleExpression="aql:self.eContainer().name + ' Interface Event Definition'" initialisation="true" domainClass="part2::InterfaceType" initialHeaderColumnWidth="150">
      <ownedLineMappings name="IED_Event" domainClass="part2::EventType" semanticCandidatesExpression="feature:event" headerLabelExpression="Event">
        <delete name="IED_DeleteEvent" label="Delete Event">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="IED_ArrayEvent" reusedSubLines="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_Entry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherStructEntries'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_UnionEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherUnionEntries']" domainClass="part2::ArrayEventType" semanticCandidatesExpression="feature:arrayEvent" headerLabelExpression="Array Event">
        <create name="IED_ArrayEvent_CreateEntry" label="Create Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_Entry']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::EntryType" referenceName="entry"/>
        </create>
        <create name="IED_ArrayEvent_CreateOtherEntries" label="Create Other Entries" precondition="aql:self.otherEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherEntries']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherEntriesType" referenceName="otherEntries"/>
        </create>
        <create name="IED_ArrayEvent_CreateArrayEntry" label="Create Array Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_ArrayEntry']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayEntryType" referenceName="arrayEntry"/>
        </create>
        <create name="IED_ArrayEvent_CreateOtherArrayEntries" label="Create Other Array Entries" precondition="aql:self.otherArrayEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherArrayEntries']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherArrayEntriesType" referenceName="otherArrayEntries"/>
        </create>
        <create name="IED_ArrayEvent_CreateStructEntry" label="Create Struct Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_StructEntry']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructEntryType" referenceName="structEntry"/>
        </create>
        <create name="IED_ArrayEvent_CreateOtherStructEntries" label="Create Other Struct Entries" precondition="aql:self.otherStructEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherStructEntries']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherStructEntriesType" referenceName="otherStructEntries"/>
        </create>
        <create name="IED_ArrayEvent_CreateUnionEntry" label="Create Union Entry" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_UnionEntry']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionEntryType" referenceName="unionEntry"/>
        </create>
        <create name="IED_ArrayEvent_CreateOtherUnionEntries" label="Create Other Union Entries" precondition="aql:self.otherUnionEntries->isEmpty()" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_ArrayProperties']/@ownedSubLines[name='IPD_OtherUnionEntries']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OtherUnionEntriesType" referenceName="otherUnionEntries"/>
        </create>
        <delete name="IED_DeleteArrayEvent" label="Delete Array Event">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="IED_StructEvent" reusedSubLines="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_Field'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_EnumField'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_UnionField']" domainClass="part2::StructEventType" semanticCandidatesExpression="feature:structEvent" headerLabelExpression="Struct Event">
        <create name="IED_StructEvent_CreateField" label="Create Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_Field']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldType" referenceName="field">
            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'Field' + element.field->size()"/>
          </firstModelOperation>
        </create>
        <create name="IED_StructEvent_CreateArrayField" label="Create Array Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_ArrayField']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayFieldType" referenceName="arrayField">
            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'ArrayField' + element.arrayField->size()"/>
          </firstModelOperation>
        </create>
        <create name="IED_StructEvent_CreateStructField" label="Create Struct Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_StructField']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructFieldType" referenceName="structField">
            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'StructField' + element.structField->size()"/>
          </firstModelOperation>
        </create>
        <create name="IED_StructEvent_CreateEnumField" label="Create Enum Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_EnumField']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldType" referenceName="enumField">
            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'EnumField' + element.enumField->size()"/>
          </firstModelOperation>
        </create>
        <create name="IED_StructEvent_CreateUnionField" label="Create Union Field" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfacePropertiesDefinition']/@ownedLineMappings[name='IPD_StructProperties']/@ownedSubLines[name='IPD_UnionField']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionFieldType" referenceName="unionField">
            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'UnionField' + element.unionField->size()"/>
          </firstModelOperation>
        </create>
        <delete name="IED_DeleteStructEvent" label="Delete Struct Event">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="IED_EnumEvent" domainClass="part2::EventType" semanticCandidatesExpression="feature:enumEvent" headerLabelExpression="Enum Event">
        <delete name="IED_DeleteEnumEvent" label="Delete Enum Event">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="IED_UnionEvent" domainClass="part2::UnionEventType" semanticCandidatesExpression="feature:unionEvent" headerLabelExpression="Union Event">
        <delete name="IED_DeleteUnionEvent" label="Delete Union Event">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedCreateLine name="IED_CreateEvent" label="Create Event" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_Event']">
        <variables name="root" documentation="The semantic element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::EventType" referenceName="event">
          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'Event' + element.event->size()"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedCreateLine name="IED_CreateArrayEvent" label="Create Array Event" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_ArrayEvent']">
        <variables name="root" documentation="The semantic element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayEventType" referenceName="arrayEvent">
          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'ArrayEvent' + element.arrayEvent->size()"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedCreateLine name="IED_CreateStructEvent" label="Create Struct Event" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_StructEvent']">
        <variables name="root" documentation="The semantic element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructEventType" referenceName="structEvent">
          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'StructEvent' + element.structEvent->size()"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedCreateLine name="IED_CreateEnumEvent" label="Create Enum Event" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_EnumEvent']">
        <variables name="root" documentation="The semantic element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::EventType" referenceName="enumEvent">
          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'EnumEvent' + element.enumEvent->size()"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedCreateLine name="IED_CreateUnionEvent" label="Create Union Event" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceEventDefinition']/@ownedLineMappings[name='IED_UnionEvent']">
        <variables name="root" documentation="The semantic element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionEventType" referenceName="unionEvent">
          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'UnionEvent' + element.unionEvent->size()"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedColumnMappings name="IED_Name" headerLabelExpression="Name" featureName="name"/>
      <ownedColumnMappings name="IED_Type" headerLabelExpression="Type" featureName="type"/>
      <ownedColumnMappings name="IED_Modality" headerLabelExpression="Modality" featureName="modality"/>
      <ownedColumnMappings name="IED_Value" headerLabelExpression="Value" featureName="value"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:EditionTableDescription" name="InterfaceMiscDefinition" label="Interface Misc. Definition" titleExpression="aql:self.eContainer().name + ' Interface Misc. Definition'" initialisation="true" domainClass="part2::InterfaceType" initialHeaderColumnWidth="150">
      <ownedLineMappings name="IMD_Import" domainClass="part2::ImportType" semanticCandidatesExpression="feature:import" headerLabelExpression="Import">
        <delete name="IMD_DeleteImport" label="Delete Import">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="IMD_Operation" domainClass="part2::OperationType" semanticCandidatesExpression="feature:operation" headerLabelExpression="Operation">
        <delete name="IMD_DeleteOperation" label="Delete Operation">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="IMD_PublicFunction" domainClass="part2::FunctionType" semanticCandidatesExpression="feature:publicFunction" headerLabelExpression="Public Function">
        <ownedSubLines name="IMD_Param" domainClass="part2::ParamType" semanticCandidatesExpression="feature:param" headerLabelExpression="Param">
          <delete name="IMD_DeleteParam" label="Delete Param">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <create name="IMD_CreateParam" label="Create Param" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceMiscDefinition']/@ownedLineMappings[name='IMD_PublicFunction']/@ownedSubLines[name='IMD_Param']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ParamType" referenceName="param">
            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'Param ' + element.param->size()"/>
          </firstModelOperation>
        </create>
        <delete name="IMD_DeletePublicFunction" label="Delete Public Function">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedCreateLine name="IMD_CreateImport" label="Create Import" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceMiscDefinition']/@ownedLineMappings[name='IMD_Import']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ImportType" referenceName="import"/>
      </ownedCreateLine>
      <ownedCreateLine name="IMD_CreateOperation" label="Create Operation" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceMiscDefinition']/@ownedLineMappings[name='IMD_Operation']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::OperationType" referenceName="operation"/>
      </ownedCreateLine>
      <ownedCreateLine name="IMD_CreatePublicFunction" label="Create Public Function" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='InterfaceMiscDefinition']/@ownedLineMappings[name='IMD_PublicFunction']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FunctionType" referenceName="publicFunction">
          <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'Public Function ' + element.publicFunction->size()"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedColumnMappings name="IMD_Name" headerLabelExpression="Name" featureName="name"/>
      <ownedColumnMappings name="IMD_Type" headerLabelExpression="Type" featureName="type"/>
      <ownedColumnMappings name="IMD_Modality" headerLabelExpression="Modality" featureName="modality"/>
      <ownedColumnMappings name="IMD_File" headerLabelExpression="File" featureName="file"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:DiagramDescription" name="TreeDefinition" label="Tree Definition" titleExpression="aql:self.eContainer().name + ' Tree Definition'" initialisation="true" domainClass="part2::TreeType">
      <layout xsi:type="description_2:CompositeLayout"/>
      <defaultLayer name="Default">
        <edgeMappings name="RD_Edge" deletionDescription="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@toolSections.7/@ownedTools[name='RD_DeleteLink']" sourceMapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']" targetMapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']" targetFinderExpression="feature:eContents">
          <style strokeColor="//@userColorsPalettes[name='NG661Palette']/@entries[name='GreenFG']" sizeComputationExpression="2" routingStyle="manhattan">
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="RD_Node" detailDescriptions="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@toolSections.7/@ownedTools[name='RD_CreateTransformTypeTable']" navigationDescriptions="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@toolSections.7/@ownedTools[name='RD_OpenTransformType']" preconditionExpression="aql:self.oclIsKindOf(part2::TreeType) or self.oclIsKindOf(part2::TreeTypes) or self.oclIsKindOf(part2::ClipPathPrimitive)" deletionDescription="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@toolSections.7/@ownedTools[name='RD_DeleteNode']" labelDirectEdit="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@toolSections.7/@ownedTools[name='RD_DirectEdit']" semanticCandidatesExpression="feature:eAllContents" domainClass="EObject">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" borderColor="//@userColorsPalettes[name='NG661Palette']/@entries[name='GreenBorder']" showIcon="false" labelExpression="service:self.getRepresentationLabel" labelColor="//@userColorsPalettes[name='NG661Palette']/@entries[name='GreenLabel']" roundedCorner="true" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='NG661Palette']/@entries[name='GreenBG']" foregroundColor="//@userColorsPalettes[name='NG661Palette']/@entries[name='GreenFG']">
            <labelFormat>bold</labelFormat>
          </style>
        </containerMappings>
        <toolSections name="Graphical Primitives">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateRectanglePrimitive" label="Rectangle Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.RectPrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateCirclePrimitive" label="Circle Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.CirclePrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateEllipsePrimitive" label="Ellipse Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.EllipsePrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateLinePrimitive" label="Line Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.LinePrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreatePolylinePrimitive" label="Polyline Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.PolylinePrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreatePolygonPrimitive" label="Polygon Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.PolygonPrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreatePathPrimitive" label="Path Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.PathPrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateImagePrimitive" label="Image Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.ImagePrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateSimpleTextPrimitive" label="Simple Text Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.SimpleTextPrimitive')"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Graphical Containers">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateGroupPrimitive" label="Group Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.GroupPrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateTransformGroupPrimitive" label="Transform Group Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.TransformGroupPrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateReplicatePrimitive" label="Replicate Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.ReplicatePrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateChildrenPrimitive" label="Children Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.ChildPrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateSwitchNodePrimitive" label="Switch Node Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.SwitchNodePrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateClippingContainerPrimitive" label="Clipping Container Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.ClippingContainerPrimitive')">
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.createTreeType('org.polarsys.ng661designer.part2.ClipPathPrimitive')"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Graphic Basic Components">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateArcComponent" label="Arc Component" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.ArcComponent')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateCrownComponent" label="Crown Component" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.CrownComponent')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreatePolarLineComponent" label="Polar Line Component" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.PolarLineComponent')"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Interaction Primitives">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_PointerAreaPrimitive" label="Pointer Area Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.PointerAreaPrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_PointerGestureAreaPrimitive" label="Pointer Gesture Area Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.PointerGestureAreaPrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateTouchAreaPrimitive" label="Touch Area Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.PointerAreaPrimitive.touch')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_GestureAreaPrimitive" label="Gesture Area Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.GestureAreaPrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateKeyboardInputPrimitive" label="Keyboard Input Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.KeyboardInputPrimitive')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateScrollWheelInputPrimitive" label="Scroll Wheel Input Primitive" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.ScrollWheelInputPrimitive')"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Clock">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="RD_CreateClockType" label="Clock" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@containerMappings[name='RD_Node']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createTreeType('org.polarsys.ng661designer.part2.ClockType')"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Link">
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="RD_CreateLink" label="Link" precondition="aql:preSource.oclAsType(ecore::EObject).canContainTargetTreeType(preTarget.oclAsType(ecore::EObject))" edgeMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='TreeDefinition']/@defaultLayer/@edgeMappings[name='RD_Edge']" iconPath="/org.polarsys.ng661designer.design/icons/Link.gif" connectionStartPrecondition="service:preSource.canContainTreeType()">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.oclAsType(ecore::EObject).createContainmentLink(target.oclAsType(ecore::EObject))"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Composition">
          <ownedTools xsi:type="tool:SelectionWizardDescription" name="RD_CreationComposition" label="Import Component Definition Type(s)" candidatesExpression="service:self.getAllComponentDefinitions" multiple="true" message="Select the component definition type(s) to reuse" iconPath="/org.polarsys.ng661designer.design/icons/importTreeType.png" windowTitle="Import Component Definition Type(s)">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="service:container.importTreeType(element)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:PaneBasedSelectionWizardDescription" name="RD_ImportProperty" label="Import Property" precondition="aql:container.oclIsKindOf(part2::WidgetComposition)" iconPath="/org.polarsys.ng661designer.design/icons/importProperty.png" message="Import properties" candidatesExpression="service:container.getProperties" preSelectedCandidatesExpression="aql:container.oclAsType(part2::WidgetComposition).values.property">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="service:container.importProperty(element)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Edition">
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="RD_DeleteLink">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:containerView.oclAsType(DSemanticDecorator).target.oclAsType(ecore::EObject).createContainmentLink(elementView.oclAsType(DEdge).targetNode.oclAsType(DDiagramElement).target.oclAsType(ecore::EObject))"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="RD_DirectEdit" precondition="aql:self.oclIsKindOf(part2::ClipPathPrimitive) == false">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.setTreeType(arg0)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="RD_DeleteNode">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.oclIsKindOf(part2::TreeTypes)">
                  <subModelOperations xsi:type="tool:RemoveElement"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="description_1:TableCreationDescription" name="RD_CreateTransformTypeTable" label="Create Transform Type Table" precondition="aql:(self.oclIsKindOf(part2::TransformGroupPrimitive) and self.oclAsType(part2::TransformGroupPrimitive).transform = null) or (self.oclIsKindOf(part2::ChildPrimitive) and self.oclAsType(part2::ChildPrimitive).transform = null)" titleExpression="aql:self.id + ' Transform Type'" browseExpression="aql:self.transform" tableDescription="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Transform%20Type']">
            <initialOperation>
              <firstModelOperations xsi:type="tool:CreateInstance" typeName="part2::TransformType" referenceName="transform"/>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="tableName"/>
          </ownedTools>
          <ownedTools xsi:type="description_1:TableNavigationDescription" name="RD_OpenTransformType" label="Open Table" tableDescription="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Transform%20Type']">
            <containerViewVariable name="containerView"/>
            <containerVariable name="container"/>
            <representationNameVariable name="tableName"/>
          </ownedTools>
          <ownedTools xsi:type="tool:PopupMenu" name="RD_DeleteTransformType" label="Delete" precondition="aql:(self.oclIsKindOf(part2::TransformGroupPrimitive) and self.oclAsType(part2::TransformGroupPrimitive).transform &lt;> null) or (self.oclIsKindOf(part2::ChildPrimitive) and self.oclAsType(part2::ChildPrimitive).transform &lt;> null)">
            <menuItemDescription xsi:type="tool:OperationAction" name="RD_DeleteTransformType" label="Transform Type">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.transform.eInverse()->filter(viewpoint::DRepresentationDescriptor)->first()">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:Let" valueExpression="aql:self.transform.eInverse()->filter(table::DTable)->first()">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance.eResource().removeRootElement(instance)"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.transform">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_3:TreeDescription" name="BehaviorDefinition" label="Behavior Definition" titleExpression="aql:self.eContainer().name + ' Behavior Definition'" initialisation="true" domainClass="part2::BehaviorType">
      <subItemMappings name="BD_SCXML" detailDescriptions="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='BehaviorDefinition']/@ownedRepresentationCreationDescriptions[name='BD_CreateStateMachine']" navigationDescriptions="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='BehaviorDefinition']/@ownedRepresentationNavigationDescriptions[name='BD_NavigateStateMachine']" domainClass="scxml::ScxmlScxmlType" semanticCandidatesExpression="feature:scxml">
        <defaultStyle>
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
      </subItemMappings>
      <subItemMappings name="BD_Function" domainClass="part2::FunctionType" semanticCandidatesExpression="feature:function">
        <defaultStyle>
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <subItemMappings name="BD_Param" domainClass="part2::ParamType" semanticCandidatesExpression="feature:param">
          <defaultStyle>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
        </subItemMappings>
        <create name="BD_CreateParam" label="Create Param" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='BehaviorDefinition']/@subItemMappings[name='BD_Function']/@subItemMappings[name='BD_Param']">
          <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="aql:element.createNameElement('org.polarsys.ng661designer.part2.ParamType')"/>
          <variables name="root" documentation="The semantic element of the tree."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
        </create>
        <popupMenus name="RD_MenuOpenEditor" label="Open Editor">
          <menuItemDescriptions xsi:type="tool:OperationAction" name="RD_OpenEditor" label="Open Script">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="service:self.setScript"/>
            </initialOperation>
          </menuItemDescriptions>
        </popupMenus>
      </subItemMappings>
      <createTreeItem name="BD_CreateSCXML" label="Create SCXML" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='BehaviorDefinition']/@subItemMappings[name='BD_SCXML']">
        <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="aql:element.createNameElement('org.w3._2005._07.scxml.ScxmlScxmlType')"/>
        <variables name="root" documentation="The semantic element of the tree."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
      </createTreeItem>
      <createTreeItem name="BD_CreateFunction" label="Create Function" elementsToSelect="service:stdEmptyCollection" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='BehaviorDefinition']/@subItemMappings[name='BD_Function']">
        <firstModelOperation xsi:type="tool:ChangeContext" browseExpression="aql:element.createNameElement('org.polarsys.ng661designer.part2.FunctionType')"/>
        <variables name="root" documentation="The semantic element of the tree."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
      </createTreeItem>
      <ownedRepresentationCreationDescriptions xsi:type="tool_1:DiagramCreationDescription" name="BD_CreateStateMachine" label="State Machine Definition" diagramDescription="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']">
        <initialOperation/>
        <containerViewVariable name="containerView"/>
        <representationNameVariable name="diagramName"/>
      </ownedRepresentationCreationDescriptions>
      <ownedRepresentationNavigationDescriptions xsi:type="tool_1:DiagramNavigationDescription" name="BD_NavigateStateMachine" label="State Machine Definition" diagramDescription="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']">
        <containerViewVariable name="containerView"/>
        <containerVariable name="container"/>
        <representationNameVariable name="diagramName"/>
      </ownedRepresentationNavigationDescriptions>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:DiagramDescription" name="StateMachineDefinition" label="State Machine Definition" titleExpression="aql:self.name + ' State Machine Definition'" initialisation="true" domainClass="scxml::ScxmlScxmlType" enablePopupBars="true">
      <layout xsi:type="description_2:CompositeLayout"/>
      <defaultLayer name="Default">
        <nodeMappings name="SMD_InitialState" preconditionExpression="service:self.isInitialState" semanticCandidatesExpression="feature:state" domainClass="scxml::ScxmlStateType" reusedBorderedNodeMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@containerMappings[name='SMD_State']/@borderedNodeMappings[name='SMD_OnEntry'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@containerMappings[name='SMD_State']/@borderedNodeMappings[name='SMD_OnExit']">
          <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="feature:id" sizeComputationExpression="5" workspacePath="/org.polarsys.ng661designer.design/icons/EtatInitial.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="SMD_Transition" labelDirectEdit="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@toolSections.2/@ownedTools[name='SMD_DirectEditTransition']" semanticElements="service:self.getAssociatedElement" sourceMapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@containerMappings[name='SMD_State'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@nodeMappings[name='SMD_InitialState']" targetMapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@containerMappings[name='SMD_State'] //@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@nodeMappings[name='SMD_InitialState']" targetFinderExpression="aql:self.getTransitionTarget(self.eContainer(scxml::ScxmlScxmlType))" sourceFinderExpression="feature:eContainer" domainClass="scxml::ScxmlTransitionType" useDomainElement="true">
          <style strokeColor="//@userColorsPalettes[name='NG661Palette']/@entries[name='BlueFG']" sizeComputationExpression="2" routingStyle="manhattan">
            <centerLabelStyleDescription showIcon="false" labelExpression="service:self.getTransitionLabel">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="SMD_State" preconditionExpression="service:self.isNotInitialState" labelDirectEdit="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@toolSections.2/@ownedTools[name='SMD_DirectEditID']" semanticCandidatesExpression="feature:state" domainClass="scxml::ScxmlStateType" reusedNodeMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@nodeMappings[name='SMD_InitialState']" reusedContainerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@containerMappings[name='SMD_State']">
          <borderedNodeMappings name="SMD_OnEntry" semanticCandidatesExpression="feature:onentry" semanticElements="service:self.getAssociatedElement" domainClass="scxml::ScxmlOnexecuteType">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="service:self.getOnentryLabel" sizeComputationExpression="2" workspacePath="/org.polarsys.ng661designer.design/icons/ScxmlOnentryType.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="SMD_OnExit" semanticCandidatesExpression="feature:onexit" semanticElements="service:self.getAssociatedElement" domainClass="scxml::ScxmlOnexecuteType">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="service:self.getOnexitLabel" sizeComputationExpression="2" workspacePath="/org.polarsys.ng661designer.design/icons/ScxmlOnexitType.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" borderColor="//@userColorsPalettes[name='NG661Palette']/@entries[name='BlueBorder']" showIcon="false" labelExpression="feature:id" labelColor="//@userColorsPalettes[name='NG661Palette']/@entries[name='BlueLabel']" roundedCorner="true" backgroundStyle="GradientTopToBottom" backgroundColor="//@userColorsPalettes[name='NG661Palette']/@entries[name='BlueFG']" foregroundColor="//@userColorsPalettes[name='NG661Palette']/@entries[name='BlueBG']">
            <labelFormat>bold</labelFormat>
          </style>
        </containerMappings>
        <toolSections name="SMD_State" label="State">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="SMD_Create_State" label="State" containerMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@containerMappings[name='SMD_State']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createIDElement('org.w3._2005._07.scxml.ScxmlStateType')">
                <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'ScxmlStateType' + container.eContents()->size() + 1"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="SMD_Create_OnEntry" label="On Entry" nodeMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@containerMappings[name='SMD_State']/@borderedNodeMappings[name='SMD_OnEntry']" iconPath="/org.polarsys.ng661designer.design/icons/ScxmlOnentryType.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createElement('org.w3._2005._07.scxml.ScxmlOnexecuteType', 'onentry')"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="SMD_Create_OnExit" label="On Exit" nodeMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@containerMappings[name='SMD_State']/@borderedNodeMappings[name='SMD_OnExit']" iconPath="/org.polarsys.ng661designer.design/icons/ScxmlOnexitType.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.createElement('org.w3._2005._07.scxml.ScxmlOnexecuteType', 'onexit')"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="SMD_Transition" label="Transition">
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="SMD_Create_Transition" label="Transition" edgeMappings="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='StateMachineDefinition']/@defaultLayer/@edgeMappings[name='SMD_Transition']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.oclAsType(scxml::ScxmlStateType).createTransition(target.oclAsType(scxml::ScxmlStateType))"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="SMD_Edition" label="Edition">
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="SMD_DirectEditTransition" inputLabelExpression="service:self.getTransitionInputLabelExpression">
            <mask mask="{0}[{1}]"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:SetValue" featureName="event" valueExpression="var:arg0">
                <subModelOperations xsi:type="tool:SetValue" featureName="cond" valueExpression="var:arg1"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DirectEditLabel" name="SMD_DirectEditID">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:For" expression="aql:self.eContainer(scxml::ScxmlScxmlType).eAllContents(scxml::ScxmlTransitionType)->select(t : scxml::ScxmlTransitionType | t.target = self.id)">
                  <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="var:arg0"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="var:arg0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:PopupMenu" name="SMD_MenuOpenEditor" label="Open Editor">
            <menuItemDescription xsi:type="tool:OperationAction" name="RD_OpenEditor" label="Open Script" precondition="aql:self.oclIsKindOf(scxml::ScxmlTransitionType) or self.oclIsKindOf(scxml::ScxmlScxmlType) or self.oclIsKindOf(scxml::ScxmlOnexecuteType)">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="service:self.setScript"/>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:EditionTableDescription" name="Definition Types" titleExpression="aql:self.eContainer().name + ' Definition Types'" initialisation="true" domainClass="part2::DefinitionType" initialHeaderColumnWidth="150">
      <ownedLineMappings name="DT_TypeDefinitions" domainClass="part2::DefinitionType" semanticCandidatesExpression="var:self" headerLabelExpression="Type Definitions">
        <ownedSubLines name="DT_TypeDefinition" domainClass="part2::DefinitionsType" semanticCandidatesExpression="feature:typeDefinition" headerLabelExpression="Type Definition">
          <ownedSubLines name="DT_TD_StructDefinitionType" domainClass="part2::StructDefinitionType" semanticCandidatesExpression="feature:structDefinition" headerLabelExpression="Struct Definition">
            <ownedSubLines name="DT_TD_FieldDefinition" domainClass="part2::FieldDefinitionType" semanticCandidatesExpression="feature:fieldDefinition" headerLabelExpression="Field Definition">
              <delete name="DT_TD_DeleteFieldDefinition" label="Delete Field Definition">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <ownedSubLines name="DT_TD_StructFieldDefinition" domainClass="part2::FieldDefinitionType" semanticCandidatesExpression="feature:structFieldDefinition" headerLabelExpression="Struct Field Definition">
              <delete name="DT_TD_DeleteStructFieldDefinition" label="Delete Struct Field Definition">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <ownedSubLines name="DT_TD_ArrayFieldDefinition" domainClass="part2::ArrayFieldDefinitionType" semanticCandidatesExpression="feature:arrayFieldDefinition" headerLabelExpression="Array Field Definition">
              <delete name="DT_TD_DeleteArrayFieldDefinition" label="Delete Array Field Definition">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <ownedSubLines name="DT_TD_EnumFieldDefinition" domainClass="part2::FieldDefinitionType" semanticCandidatesExpression="feature:enumFieldDefinition" headerLabelExpression="Enum Field Definition">
              <delete name="DT_TD_DeleteEnumFieldDefinition" label="Delete Enum Field Definition">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <ownedSubLines name="DT_TD_UnionFieldDefinition" domainClass="part2::FieldDefinitionType" semanticCandidatesExpression="feature:unionFieldDefinition" headerLabelExpression="Union Field Definition">
              <delete name="DT_TD_DeleteUnionFieldDefinition" label="Delete Union Field Definition">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <create name="DT_TD_CreateFieldDefinition" label="Create Field Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_TypeDefinitions']/@ownedSubLines[name='DT_TypeDefinition']/@ownedSubLines[name='DT_TD_StructDefinitionType']/@ownedSubLines[name='DT_TD_FieldDefinition']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldDefinitionType" referenceName="fieldDefinition">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'FieldDefinition' + element.fieldDefinition->size()"/>
              </firstModelOperation>
            </create>
            <create name="DT_TD_CreateStructFieldDefinition" label="Create Struct Field Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_TypeDefinitions']/@ownedSubLines[name='DT_TypeDefinition']/@ownedSubLines[name='DT_TD_StructDefinitionType']/@ownedSubLines[name='DT_TD_StructFieldDefinition']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldDefinitionType" referenceName="structFieldDefinition">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'StructFieldDefinition' + element.structFieldDefinition->size()"/>
              </firstModelOperation>
            </create>
            <create name="DT_TD_CreateArrayFieldDefinition" label="Create Array Field Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_TypeDefinitions']/@ownedSubLines[name='DT_TypeDefinition']/@ownedSubLines[name='DT_TD_StructDefinitionType']/@ownedSubLines[name='DT_TD_ArrayFieldDefinition']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayFieldDefinitionType" referenceName="arrayFieldDefinition">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'ArrayFieldDefinition' + element.arrayFieldDefinition->size()"/>
              </firstModelOperation>
            </create>
            <create name="DT_TD_CreateEnumFieldDefinition" label="Create Enum Field Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_TypeDefinitions']/@ownedSubLines[name='DT_TypeDefinition']/@ownedSubLines[name='DT_TD_StructDefinitionType']/@ownedSubLines[name='DT_TD_EnumFieldDefinition']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldDefinitionType" referenceName="enumFieldDefinition">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'EnumFieldDefinition' + element.enumFieldDefinition->size()"/>
              </firstModelOperation>
            </create>
            <create name="DT_TD_CreateUnionFieldDefinition" label="Create Union Field Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_TypeDefinitions']/@ownedSubLines[name='DT_TypeDefinition']/@ownedSubLines[name='DT_TD_StructDefinitionType']/@ownedSubLines[name='DT_TD_UnionFieldDefinition']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldDefinitionType" referenceName="unionFieldDefinition">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'UnionFieldDefinition' + element.unionFieldDefinition->size()"/>
              </firstModelOperation>
            </create>
            <delete name="DT_TD_DeleteStructDefinitionType" label="Delete Struct Definition">
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="root" documentation="The semantic root element of the table."/>
              <firstModelOperation xsi:type="tool:RemoveElement"/>
            </delete>
          </ownedSubLines>
          <ownedSubLines name="DT_TD_EnumDefinitionType" domainClass="part2::EnumDefinitionType" semanticCandidatesExpression="feature:enumDefinition" headerLabelExpression="Enum Definition">
            <ownedSubLines name="DT_TD_Enumeration" domainClass="part2::EnumerationType" semanticCandidatesExpression="feature:enumeration" headerLabelExpression="Enumeration">
              <delete name="DT_TD_DeleteEnumeration" label="Delete Enumeration">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <create name="DT_TD_CreateEnumeration" label="Create Enumeration" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_TypeDefinitions']/@ownedSubLines[name='DT_TypeDefinition']/@ownedSubLines[name='DT_TD_EnumDefinitionType']/@ownedSubLines[name='DT_TD_Enumeration']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::EnumerationType" referenceName="enumeration">
                <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:'Value' + element.enumeration->size()"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="index" valueExpression="aql:if (element.enumeration->size() > 0) then '' + (element.enumeration->size() - 1) else '0' endif"/>
              </firstModelOperation>
            </create>
            <delete name="DT_TD_DeleteEnumDefinitionType" label="Delete Enum Definition">
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="root" documentation="The semantic root element of the table."/>
              <firstModelOperation xsi:type="tool:RemoveElement"/>
            </delete>
          </ownedSubLines>
          <ownedSubLines name="DT_TD_ArrayDefinitionType" domainClass="part2::ArrayDefinitionType" semanticCandidatesExpression="feature:arrayDefinition" headerLabelExpression="Array Definition">
            <delete name="DT_TD_DeleteArrayDefinitionType" label="Delete Array Definition">
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="root" documentation="The semantic root element of the table."/>
              <firstModelOperation xsi:type="tool:RemoveElement"/>
            </delete>
          </ownedSubLines>
          <ownedSubLines name="DT_TD_UnionDefinitionType" domainClass="part2::UnionDefinitionType" semanticCandidatesExpression="feature:unionDefinition" headerLabelExpression="Union Definition">
            <ownedSubLines name="DT_TD_TypeAlternative" domainClass="part2::TypeAlternativeType" semanticCandidatesExpression="feature:typeAlternative" headerLabelExpression="Type Alternative">
              <delete name="DT_TD_DeleteTypeAlternative" label="Delete Type Alternative">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <create name="DT_TD_CreateTypeAlternative" label="Create Type Alternative" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_TypeDefinitions']/@ownedSubLines[name='DT_TypeDefinition']/@ownedSubLines[name='DT_TD_UnionDefinitionType']/@ownedSubLines[name='DT_TD_TypeAlternative']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::TypeAlternativeType" referenceName="typeAlternative">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'TypeAlternative' + element.typeAlternative->size()"/>
              </firstModelOperation>
            </create>
            <delete name="DT_TD_DeleteUnionDefinitionType" label="Delete Union Definition">
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="root" documentation="The semantic root element of the table."/>
              <firstModelOperation xsi:type="tool:RemoveElement"/>
            </delete>
          </ownedSubLines>
          <create name="DT_TD_CreateStructDefinitionType" label="Create Struct Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_TypeDefinitions']/@ownedSubLines[name='DT_TypeDefinition']/@ownedSubLines[name='DT_TD_StructDefinitionType']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructDefinitionType" referenceName="structDefinition">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'StructDefinition' + element.structDefinition->size()"/>
            </firstModelOperation>
          </create>
          <create name="DT_TD_CreateEnumDefinitionType" label="Create Enum Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_TypeDefinitions']/@ownedSubLines[name='DT_TypeDefinition']/@ownedSubLines[name='DT_TD_EnumDefinitionType']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::EnumDefinitionType" referenceName="enumDefinition">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'EnumDefinition' + element.enumDefinition->size()"/>
              <subModelOperations xsi:type="tool:CreateInstance" typeName="part2::EnumerationType" referenceName="enumeration">
                <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="Default"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="index" valueExpression="aql:'0'"/>
              </subModelOperations>
            </firstModelOperation>
          </create>
          <create name="DT_TD_CreateArrayDefinitionType" label="Create Array Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_TypeDefinitions']/@ownedSubLines[name='DT_TypeDefinition']/@ownedSubLines[name='DT_TD_ArrayDefinitionType']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayDefinitionType" referenceName="arrayDefinition">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'ArrayDefinition' + element.arrayDefinition->size()"/>
            </firstModelOperation>
          </create>
          <create name="DT_TD_CreateUnionDefinitionType" label="Create Union Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_TypeDefinitions']/@ownedSubLines[name='DT_TypeDefinition']/@ownedSubLines[name='DT_TD_UnionDefinitionType']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionDefinitionType" referenceName="unionDefinition" variableName="unionType">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'UnionDefinition' + element.unionDefinition->size()"/>
              <subModelOperations xsi:type="tool:CreateInstance" typeName="part2::TypeAlternativeType" referenceName="typeAlternative">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'TypeAlternative' + unionType.typeAlternative->size()"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool:CreateInstance" typeName="part2::TypeAlternativeType" referenceName="typeAlternative">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'TypeAlternative' + unionType.typeAlternative->size()"/>
              </subModelOperations>
            </firstModelOperation>
          </create>
          <delete name="DT_TD_DeleteTypeDefinition" label="Delete Type Definition">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <create name="DT_CreateTypeDefinition" label="Create Type Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_TypeDefinitions']/@ownedSubLines[name='DT_TypeDefinition']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::DefinitionsType" referenceName="typeDefinition"/>
        </create>
        <delete name="DT_DeleteTypeDefinitions" label="Delete Type Definitions" precondition="false">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="DT_PropertyGroupDefinitions" domainClass="part2::DefinitionType" semanticCandidatesExpression="var:self" headerLabelExpression="Property Group Definitions">
        <ownedSubLines name="DT_PropertyGroupDefinition" domainClass="part2::DefinitionsType" semanticCandidatesExpression="feature:propertyGroupDefinition" headerLabelExpression="Property Group Definition">
          <ownedSubLines name="DT_PGD_StructDefinitionType" domainClass="part2::StructDefinitionType" semanticCandidatesExpression="feature:structDefinition" headerLabelExpression="Struct Definition">
            <ownedSubLines name="DT_PGD_FieldDefinition" domainClass="part2::FieldDefinitionType" semanticCandidatesExpression="feature:fieldDefinition" headerLabelExpression="Field Definition">
              <delete name="DT_PGD_DeleteFieldDefinition" label="Delete Field Definition">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <ownedSubLines name="DT_PGD_StructFieldDefinition" domainClass="part2::FieldDefinitionType" semanticCandidatesExpression="feature:structFieldDefinition" headerLabelExpression="Struct Field Definition">
              <delete name="DT_PGD_DeleteStructFieldDefinition" label="Delete Struct Field Definition">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <ownedSubLines name="DT_PGD_ArrayFieldDefinition" domainClass="part2::ArrayFieldDefinitionType" semanticCandidatesExpression="feature:arrayFieldDefinition" headerLabelExpression="Array Field Definition">
              <delete name="DT_PGD_DeleteArrayFieldDefinition" label="Delete Array Field Definition">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <ownedSubLines name="DT_PGD_EnumFieldDefinition" domainClass="part2::FieldDefinitionType" semanticCandidatesExpression="feature:enumFieldDefinition" headerLabelExpression="Enum Field Definition">
              <delete name="DT_PGD_DeleteEnumFieldDefinition" label="Delete Enum Field Definition">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <ownedSubLines name="DT_PGD_UnionFieldDefinition" domainClass="part2::FieldDefinitionType" semanticCandidatesExpression="feature:unionFieldDefinition" headerLabelExpression="Union Field Definition">
              <delete name="DT_PGD_DeleteUnionFieldDefinition" label="Delete Union Field Definition">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <create name="DT_PGD_CreateFieldDefinition" label="Create Field Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_PropertyGroupDefinitions']/@ownedSubLines[name='DT_PropertyGroupDefinition']/@ownedSubLines[name='DT_PGD_StructDefinitionType']/@ownedSubLines[name='DT_PGD_FieldDefinition']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldDefinitionType" referenceName="fieldDefinition">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'FieldDefinition' + element.fieldDefinition->size()"/>
              </firstModelOperation>
            </create>
            <create name="DT_PGD_CreateStructFieldDefinition" label="Create Struct Field Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_PropertyGroupDefinitions']/@ownedSubLines[name='DT_PropertyGroupDefinition']/@ownedSubLines[name='DT_PGD_StructDefinitionType']/@ownedSubLines[name='DT_PGD_StructFieldDefinition']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldDefinitionType" referenceName="structFieldDefinition">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'StructFieldDefinition' + element.structFieldDefinition->size()"/>
              </firstModelOperation>
            </create>
            <create name="DT_PGD_CreateArrayFieldDefinition" label="Create Array Field Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_PropertyGroupDefinitions']/@ownedSubLines[name='DT_PropertyGroupDefinition']/@ownedSubLines[name='DT_PGD_StructDefinitionType']/@ownedSubLines[name='DT_PGD_ArrayFieldDefinition']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayFieldDefinitionType" referenceName="arrayFieldDefinition">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'ArrayFieldDefinition' + element.arrayFieldDefinition->size()"/>
              </firstModelOperation>
            </create>
            <create name="DT_PGD_CreateEnumFieldDefinition" label="Create Enum Field Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_PropertyGroupDefinitions']/@ownedSubLines[name='DT_PropertyGroupDefinition']/@ownedSubLines[name='DT_PGD_StructDefinitionType']/@ownedSubLines[name='DT_PGD_EnumFieldDefinition']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldDefinitionType" referenceName="enumFieldDefinition">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'EnumFieldDefinition' + element.enumFieldDefinition->size()"/>
              </firstModelOperation>
            </create>
            <create name="DT_PGD_CreateUnionFieldDefinition" label="Create Union Field Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_PropertyGroupDefinitions']/@ownedSubLines[name='DT_PropertyGroupDefinition']/@ownedSubLines[name='DT_PGD_StructDefinitionType']/@ownedSubLines[name='DT_PGD_UnionFieldDefinition']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::FieldDefinitionType" referenceName="unionFieldDefinition">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'UnionFieldDefinition' + element.unionFieldDefinition->size()"/>
              </firstModelOperation>
            </create>
            <delete name="DT_PGD_DeleteStructDefinitionType" label="Delete Struct Definition">
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="root" documentation="The semantic root element of the table."/>
              <firstModelOperation xsi:type="tool:RemoveElement"/>
            </delete>
          </ownedSubLines>
          <ownedSubLines name="DT_PGD_EnumDefinitionType" domainClass="part2::EnumDefinitionType" semanticCandidatesExpression="feature:enumDefinition" headerLabelExpression="Enum Definition">
            <ownedSubLines name="DT_PGD_Enumeration" domainClass="part2::EnumerationType" semanticCandidatesExpression="feature:enumeration" headerLabelExpression="Enumeration">
              <delete name="DT_PGD_DeleteEnumeration" label="Delete Enumeration">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <create name="DT_PGD_CreateEnumeration" label="Create Enumeration" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_PropertyGroupDefinitions']/@ownedSubLines[name='DT_PropertyGroupDefinition']/@ownedSubLines[name='DT_PGD_EnumDefinitionType']/@ownedSubLines[name='DT_PGD_Enumeration']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::EnumerationType" referenceName="enumeration">
                <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:'Value' + element.enumeration->size()"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="index" valueExpression="aql:if (element.enumeration->size() > 0) then '' + (element.enumeration->size() - 1) else '0' endif"/>
              </firstModelOperation>
            </create>
            <delete name="DT_PGD_DeleteEnumDefinitionType" label="Delete Enum Definition">
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="root" documentation="The semantic root element of the table."/>
              <firstModelOperation xsi:type="tool:RemoveElement"/>
            </delete>
          </ownedSubLines>
          <ownedSubLines name="DT_PGD_ArrayDefinitionType" domainClass="part2::ArrayDefinitionType" semanticCandidatesExpression="feature:arrayDefinition" headerLabelExpression="Array Definition">
            <delete name="DT_PGD_DeleteArrayDefinitionType" label="Delete Array Definition">
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="root" documentation="The semantic root element of the table."/>
              <firstModelOperation xsi:type="tool:RemoveElement"/>
            </delete>
          </ownedSubLines>
          <ownedSubLines name="DT_PGD_UnionDefinitionType" domainClass="part2::UnionDefinitionType" semanticCandidatesExpression="feature:unionDefinition" headerLabelExpression="Union Definition">
            <ownedSubLines name="DT_PGD_TypeAlternative" domainClass="part2::TypeAlternativeType" semanticCandidatesExpression="feature:typeAlternative" headerLabelExpression="Type Alternative">
              <delete name="DT_PGD_DeleteTypeAlternative" label="Delete Type Alternative">
                <variables name="element" documentation="The semantic currently edited element."/>
                <variables name="root" documentation="The semantic root element of the table."/>
                <firstModelOperation xsi:type="tool:RemoveElement"/>
              </delete>
            </ownedSubLines>
            <create name="DT_PGD_CreateTypeAlternative" label="Create Type Alternative" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_PropertyGroupDefinitions']/@ownedSubLines[name='DT_PropertyGroupDefinition']/@ownedSubLines[name='DT_PGD_UnionDefinitionType']/@ownedSubLines[name='DT_PGD_TypeAlternative']">
              <variables name="root" documentation="The semantic root element of the table."/>
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
              <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::TypeAlternativeType" referenceName="typeAlternative">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'TypeAlternative' + element.typeAlternative->size()"/>
              </firstModelOperation>
            </create>
            <delete name="DT_PGD_DeleteUnionDefinitionType" label="Delete Union Definition">
              <variables name="element" documentation="The semantic currently edited element."/>
              <variables name="root" documentation="The semantic root element of the table."/>
              <firstModelOperation xsi:type="tool:RemoveElement"/>
            </delete>
          </ownedSubLines>
          <create name="DT_PGD_CreateStructDefinitionType" label="Create Struct Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_PropertyGroupDefinitions']/@ownedSubLines[name='DT_PropertyGroupDefinition']/@ownedSubLines[name='DT_PGD_StructDefinitionType']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::StructDefinitionType" referenceName="structDefinition">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'StructDefinition' + element.structDefinition->size()"/>
            </firstModelOperation>
          </create>
          <create name="DT_PGD_CreateEnumDefinitionType" label="Create Enum Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_PropertyGroupDefinitions']/@ownedSubLines[name='DT_PropertyGroupDefinition']/@ownedSubLines[name='DT_PGD_EnumDefinitionType']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::EnumDefinitionType" referenceName="enumDefinition">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'EnumDefinition' + element.enumDefinition->size()"/>
              <subModelOperations xsi:type="tool:CreateInstance" typeName="part2::EnumerationType" referenceName="enumeration">
                <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="Default"/>
                <subModelOperations xsi:type="tool:SetValue" featureName="index" valueExpression="aql:'0'"/>
              </subModelOperations>
            </firstModelOperation>
          </create>
          <create name="DT_PGD_CreateArrayDefinitionType" label="Create Array Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_PropertyGroupDefinitions']/@ownedSubLines[name='DT_PropertyGroupDefinition']/@ownedSubLines[name='DT_PGD_ArrayDefinitionType']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::ArrayDefinitionType" referenceName="arrayDefinition">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'ArrayDefinition' + element.arrayDefinition->size()"/>
            </firstModelOperation>
          </create>
          <create name="DT_PGD_CreateUnionDefinitionType" label="Create Union Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_PropertyGroupDefinitions']/@ownedSubLines[name='DT_PropertyGroupDefinition']/@ownedSubLines[name='DT_PGD_UnionDefinitionType']">
            <variables name="root" documentation="The semantic root element of the table."/>
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
            <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::UnionDefinitionType" referenceName="unionDefinition" variableName="unionType">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'UnionDefinition' + element.unionDefinition->size()"/>
              <subModelOperations xsi:type="tool:CreateInstance" typeName="part2::TypeAlternativeType" referenceName="typeAlternative">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'TypeAlternative' + unionType.typeAlternative->size()"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool:CreateInstance" typeName="part2::TypeAlternativeType" referenceName="typeAlternative">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'TypeAlternative' + unionType.typeAlternative->size()"/>
              </subModelOperations>
            </firstModelOperation>
          </create>
          <delete name="DT_PGD_DeletePropertyGroupDefinition" label="Delete Property Group Definition">
            <variables name="element" documentation="The semantic currently edited element."/>
            <variables name="root" documentation="The semantic root element of the table."/>
            <firstModelOperation xsi:type="tool:RemoveElement"/>
          </delete>
        </ownedSubLines>
        <create name="DT_CreatePropertyGroupDefinition" label="Create Property Group Definition" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Definition%20Types']/@ownedLineMappings[name='DT_PropertyGroupDefinitions']/@ownedSubLines[name='DT_PropertyGroupDefinition']">
          <variables name="root" documentation="The semantic root element of the table."/>
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="container" documentation="The semantic element corresponding to the view container."/>
          <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::DefinitionsType" referenceName="propertyGroupDefinition"/>
        </create>
        <delete name="DT_DeletePropertyGroupDefinition" label="Delete Property Group Definition" precondition="false">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
        </delete>
      </ownedLineMappings>
      <ownedColumnMappings name="DT_Column_Name" headerLabelExpression="Name" featureName="name"/>
      <ownedColumnMappings name="DT_Column_Type" headerLabelExpression="Type" featureName="type"/>
      <ownedColumnMappings name="DT_Column_Value" headerLabelExpression="Value" featureName="value"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:EditionTableDescription" name="Transform Type" titleExpression="aql:self.eContainer().id + ' Transform Type'" domainClass="part2::TransformType" initialHeaderColumnWidth="150">
      <ownedLineMappings name="TT_TransformMatrixType" domainClass="part2::TransformMatrixType" semanticCandidatesExpression="feature:transformMatrix" headerLabelExpression="Transform Matrix">
        <delete name="TT_DeleteTransformMatrixType" label="Delete Transform Matrix">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="TT_TransformTranslateType" domainClass="part2::TransformTranslateType" semanticCandidatesExpression="feature:transformTranslate" headerLabelExpression="Transform Translate">
        <delete name="TT_DeleteTransformTranslateType" label="Delete Transform Translate">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="TT_TransformScaleType" domainClass="part2::TransformScaleType" semanticCandidatesExpression="feature:transformScale" headerLabelExpression="Transform Scale">
        <delete name="TT_DeleteTransformScaleType" label="Delete Transform Scale">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="TT_TransformRotateType" domainClass="part2::TransformRotateType" semanticCandidatesExpression="feature:transformRotate" headerLabelExpression="Transform Rotate">
        <delete name="TT_DeleteTransformRotateType" label="Delete Transform Rotate">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="TT_TransformSkewXType" domainClass="part2::TransformSkewXType" semanticCandidatesExpression="feature:transformSkewX" headerLabelExpression="Transform Skew X">
        <delete name="TT_DeleteTransformSkewXType" label="Delete Transform Scew X">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedLineMappings name="TT_TransformSkewYType" domainClass="part2::TransformSkewYType" semanticCandidatesExpression="feature:transformSkewY" headerLabelExpression="Transform Skew Y">
        <delete name="TT_DeleteTransformSkewYType" label="Delete Transform Scew Y">
          <variables name="element" documentation="The semantic currently edited element."/>
          <variables name="root" documentation="The semantic root element of the table."/>
          <firstModelOperation xsi:type="tool:RemoveElement"/>
        </delete>
      </ownedLineMappings>
      <ownedCreateLine name="TT_CreateTransformMatrix" label="Create Transform Matrix" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Transform%20Type']/@ownedLineMappings[name='TT_TransformMatrixType']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::TransformMatrixType" referenceName="transformMatrix"/>
      </ownedCreateLine>
      <ownedCreateLine name="TT_CreateTransformTranslate" label="Create Transform Translate" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Transform%20Type']/@ownedLineMappings[name='TT_TransformTranslateType']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::TransformTranslateType" referenceName="transformTranslate"/>
      </ownedCreateLine>
      <ownedCreateLine name="TT_CreateTransformScale" label="Create Transform Scale" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Transform%20Type']/@ownedLineMappings[name='TT_TransformScaleType']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::TransformScaleType" referenceName="transformScale"/>
      </ownedCreateLine>
      <ownedCreateLine name="TT_CreateTransformRotate" label="Create Transform Rotate" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Transform%20Type']/@ownedLineMappings[name='TT_TransformRotateType']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::TransformRotateType" referenceName="transformRotate"/>
      </ownedCreateLine>
      <ownedCreateLine name="TT_CreateTransformSkewX" label="Create Transform Skew X" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Transform%20Type']/@ownedLineMappings[name='TT_TransformSkewXType']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::TransformSkewXType" referenceName="transformSkewX"/>
      </ownedCreateLine>
      <ownedCreateLine name="TT_CreateTransformSkewY" label="Create Transform Skew Y" mapping="//@ownedViewpoints[name='NG661Designer']/@ownedRepresentations[name='Transform%20Type']/@ownedLineMappings[name='TT_TransformSkewYType']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="part2::TransformSkewYType" referenceName="transformSkewY"/>
      </ownedCreateLine>
      <ownedColumnMappings name="TT_a" headerLabelExpression="a" featureName="a"/>
      <ownedColumnMappings name="TT_b" headerLabelExpression="b" featureName="b"/>
      <ownedColumnMappings name="TT_c" headerLabelExpression="c" featureName="c"/>
      <ownedColumnMappings name="TT_d" headerLabelExpression="d" featureName="d"/>
      <ownedColumnMappings name="TT_e" headerLabelExpression="e" featureName="e"/>
      <ownedColumnMappings name="TT_f" headerLabelExpression="f" featureName="f"/>
      <ownedColumnMappings name="TT_tx" headerLabelExpression="tx" featureName="tx"/>
      <ownedColumnMappings name="TT_ty" headerLabelExpression="ty" featureName="ty"/>
      <ownedColumnMappings name="TT_sx" headerLabelExpression="sx" featureName="sx"/>
      <ownedColumnMappings name="TT_sy" headerLabelExpression="sy" featureName="sy"/>
      <ownedColumnMappings name="TT_angle" headerLabelExpression="angle" featureName="angle"/>
      <ownedColumnMappings name="TT_cx" headerLabelExpression="cx" featureName="cx"/>
      <ownedColumnMappings name="TT_cy" headerLabelExpression="cy" featureName="cy"/>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.polarsys.ng661designer.design.services.NG661DesignerServices"/>
    <ownedJavaExtensions qualifiedClassName="org.polarsys.ng661designer.design.services.EcoreServices"/>
    <ownedJavaExtensions qualifiedClassName="org.polarsys.ng661designer.design.services.NG661DesignerModelUtils"/>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.sirius.common.tools.api.interpreter.StandardServices"/>
    <ownedJavaExtensions qualifiedClassName="org.polarsys.ng661designer.design.services.EEFServices"/>
  </ownedViewpoints>
  <userColorsPalettes name="NG661Palette">
    <entries xsi:type="description:UserFixedColor" red="118" green="147" blue="182" name="BlueBorder"/>
    <entries xsi:type="description:UserFixedColor" red="0" green="0" blue="0" name="BlueLabel"/>
    <entries xsi:type="description:UserFixedColor" red="167" green="188" blue="214" name="BlueBG"/>
    <entries xsi:type="description:UserFixedColor" red="215" green="226" blue="239" name="BlueFG"/>
    <entries xsi:type="description:UserFixedColor" green="184" name="GreenBorder"/>
    <entries xsi:type="description:UserFixedColor" red="0" green="64" blue="0" name="GreenLabel"/>
    <entries xsi:type="description:UserFixedColor" red="171" green="211" blue="171" name="GreenFG"/>
    <entries xsi:type="description:UserFixedColor" red="213" green="233" blue="213" name="GreenBG"/>
  </userColorsPalettes>
  <extensions xsi:type="properties:ViewExtensionDescription" name="sirius_default_rules_properties">
    <categories name="Default">
      <pages name="sirius_default_rules_defaultpage" labelExpression="aql:input.emfEditServices(self).getTabName()" semanticCandidateExpression="aql:input.getAllSemanticElements()" groups="//@extensions.0/@categories.0/@groups.0 //@extensions.0/@categories.0/@groups.1 //@extensions.0/@categories.0/@groups.2 //@extensions.0/@categories.0/@groups.3 //@extensions.0/@categories.0/@groups.4 //@extensions.0/@categories.0/@groups.5"/>
      <groups name="sirius_default_rules_defaultgroup" labelExpression="Properties" semanticCandidateExpression="var:self" preconditionExpression="">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:self.getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:eStructuralFeature.needsTextWidget() and not input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <style/>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1 and self.isDefaultValueApplied(eStructuralFeature)">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                  <fontFormat>italic</fontFormat>
                </style>
              </conditionalStyles>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
              <conditionalStyles preconditionExpression="aql:self.isDefaultValueApplied(eStructuralFeature)">
                <style>
                  <fontFormat>italic</fontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:eStructuralFeature.needsCheckboxWidget()">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many)">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference)">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
        <validationSet>
          <propertyValidationRules name="sirius_default_rules_mono_string_validation" level="ERROR" message="This value is not allowed for this field" targets="//@extensions.0/@categories.0/@groups.0/@controls.0/@ifs.0/@widget">
            <audits auditExpression="service:self.isValueAllowed(eStructuralFeature)"/>
          </propertyValidationRules>
        </validationSet>
      </groups>
      <groups name="ng661_widgetcomposition_values_group" labelExpression="aql:'Values'" domainClass="part2::WidgetComposition" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="widgetcomposition_values_for" iterator="widgetProperty" iterableExpression="feature:values" forceRefresh="true">
          <ifs name="widgetcomposition_values_if" predicateExpression="aql:true">
            <widget xsi:type="properties:TextDescription" name="widgetcomposition_value" labelExpression="aql:widgetProperty.property.name + if (widgetProperty.property.type &lt;> null and widgetProperty.property.type &lt;> '' ) then ' (' + widgetProperty.property.type + ') ' else '' endif + ':'" valueExpression="aql:widgetProperty.value">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:widgetProperty.setPropertyValueValue(newValue)"/>
              </initialOperation>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="ng661_scxmltransitiontype_script_group" labelExpression="Scripts" domainClass="scxml::ScxmlTransitionType" semanticCandidateExpression="var:self">
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="scxmltransition_script_ereference" labelExpression="aql:'Script'" referenceNameExpression="aql:'script'"/>
      </groups>
      <groups name="ng661_scxmlonexecutetype_script_group" labelExpression="Scripts" domainClass="scxml::ScxmlOnexecuteType" semanticCandidateExpression="var:self">
        <controls xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="scxmlonexecute_script_ereference" labelExpression="aql:'Script'" referenceNameExpression="aql:'script'"/>
      </groups>
      <groups name="ng661_polygonprimitive_positionlist" labelExpression="Points" domainClass="part2::PolygonPrimitive" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="ng661_polygon_point_container" label="Point">
          <controls xsi:type="properties:DynamicMappingForDescription" name="ng661_polygon_point_for" iterator="p" iterableExpression="aql:self.points.point" forceRefresh="true">
            <ifs name="ng661_polygon_point_if_X" predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" name="ng661_polygon_point_X" labelExpression="aql:'X:'" valueExpression="aql:p.x">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:p.setXValue(newValue)"/>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="ng661_polygon_point_if_Y" predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" name="ng661_polygon_point_Y" labelExpression="aql:'Y:'" valueExpression="aql:p.y">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:p.setYValue(newValue)"/>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="ng661_polygon_point_if_DeleteButton" predicateExpression="aql:true">
              <widget xsi:type="properties:ButtonDescription" name="ng661_polygon_point_delete_button" imageExpression="org.polarsys.ng661designer.design/icons/delete_obj.gif">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:p">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="3" makeColumnsWithEqualWidth="true"/>
        </controls>
        <actions tooltipExpression="Create Point" imageExpression="org.polarsys.ng661designer.design/icons/add_obj.gif">
          <initialOperation>
            <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.points = null">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="part2::PositionListType" referenceName="points"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.points">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="part2::PointType" referenceName="point"/>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </actions>
      </groups>
      <groups name="ng661_polylineprimitive_positionlist" labelExpression="Points" domainClass="part2::PolylinePrimitive" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="ng661_polyline_point_container" label="Point">
          <controls xsi:type="properties:DynamicMappingForDescription" name="ng661_polyline_point_for" iterator="p" iterableExpression="aql:self.points.point" forceRefresh="true">
            <ifs name="ng661_polyline_point_if_X" predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" name="ng661_polyline_point_X" labelExpression="aql:'X:'" valueExpression="aql:p.x">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:p.setXValue(newValue)"/>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="ng661_polyline_point_if_Y" predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" name="ng661_polyline_point_Y" labelExpression="aql:'Y:'" valueExpression="aql:p.y">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:p.setYValue(newValue)"/>
                </initialOperation>
              </widget>
            </ifs>
            <ifs name="ng661_polyline_point_if_DeleteButton" predicateExpression="aql:true">
              <widget xsi:type="properties:ButtonDescription" name="ng661_polyline_point_delete_button" imageExpression="org.polarsys.ng661designer.design/icons/delete_obj.gif">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:p">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="3" makeColumnsWithEqualWidth="true"/>
        </controls>
        <actions tooltipExpression="Create Point" imageExpression="org.polarsys.ng661designer.design/icons/add_obj.gif">
          <initialOperation>
            <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.points = null">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="part2::PositionListType" referenceName="points"/>
              </subModelOperations>
              <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.points">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="part2::PointType" referenceName="point"/>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
        </actions>
      </groups>
    </categories>
  </extensions>
</description:Group>
